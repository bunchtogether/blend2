{"version":3,"sources":["webpack:///./app/lib/colors.js","webpack:///./app/containers/NotFoundPage/index.js"],"names":["colors","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","amber","orange","deepOrange","colorGenerator","regeneratorRuntime","mark","_callee","i","wrap","_context","prev","next","length","stop","assignedColors","getColor","group","index","value","_jsx","Helmet_default","a","Header","showSearch","Navigation","NotFoundPage","_React$PureComponent","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","React","key","classes","props","react","_ref","_ref2","_ref3","Content","Paper_default","elevation","className","paper","splash","style","color","Typography_default","gutterBottom","variant","title","body1","Button_default","onClick","navigateStream","button","withConnect","connect","dispatch","bindActionCreators","compose","withStyles","theme","_paper","flex","display","flexDirection","justifyContent","alignItems","padding","spacing","_defineProperty","breakpoints","up","position","top","left","right","bottom","marginTop","fontFamily","typography","fontSize","lineHeight","fontWeight","down","marginBottom","maxWidth"],"mappings":"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","file":"2.400999f6968a5800c15b.chunk.js","sourcesContent":["// @flow\n\nimport { pink, purple, deepPurple, indigo, blue, lightBlue, cyan, teal, green, lightGreen, lime, amber, orange, deepOrange } from '@material-ui/core/colors';\n\nconst colors = [pink[500], purple[500], deepPurple[500], indigo[500], blue[500], lightBlue[500], cyan[500], teal[500], green[500], lightGreen[500], lime[500], amber[500], orange[500], deepOrange[500]];\n\nconst colorGenerator = (function* ():Generator<*, *, *> {\n  let i = 0;\n  while (true) { // eslint-disable-line no-constant-condition\n    yield colors[i % colors.length];\n    i += 1;\n  }\n}());\n\nconst assignedColors = {};\n\nconst getColor = function (group:string, index:number | string):string {\n  if (assignedColors[group] && assignedColors[group][index]) {\n    return assignedColors[group][index];\n  }\n  assignedColors[group] = assignedColors[group] || {};\n  assignedColors[group][index] = assignedColors[group][index] || {};\n  assignedColors[group][index] = colorGenerator.next().value;\n  return assignedColors[group][index];\n};\n\n\n// https://stackoverflow.com/questions/1664140/js-function-to-calculate-complementary-colour\n\n/* hexToComplimentary : Converts hex value to HSL, shifts\n * hue by 180 degrees and then converts hex, giving complimentary color\n * as a hex value\n * @param  [String] hex : hex value\n * @return [String] : complimentary color as hex value\n */\nexport function hexToComplimentary(hexInput:string, shift?:number = 180) {\n  const hex = hexInput.replace('#', '');\n\n  const match = hex.match(new RegExp(`(.{${hex.length / 3}})`, 'g'));\n\n  if (!match) {\n    return hex;\n  }\n\n  // Convert hex to rgb\n  // Credit to Denis http://stackoverflow.com/a/36253499/4939630\n  let rgb = `rgb(${match.map((l) => parseInt(hex.length % 2 ? l + l : l, 16)).join(',')})`;\n\n  // Get array of RGB values\n  rgb = rgb.replace(/[^\\d,]/g, '').split(',');\n\n  let r = parseInt(rgb[0], 10);\n  let g = parseInt(rgb[1], 10);\n  let b = parseInt(rgb[2], 10);\n\n  // Convert RGB to HSL\n  // Adapted from answer by 0x000f http://stackoverflow.com/a/34946092/4939630\n  r /= 255.0;\n  g /= 255.0;\n  b /= 255.0;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h;\n  let s;\n  const l = (max + min) / 2.0;\n\n  if (max === min) {\n    h = s = 0; // achromatic\n  } else {\n    const d = max - min;\n    s = (l > 0.5 ? d / (2.0 - max - min) : d / (max + min));\n\n    if (max === r && g >= b) {\n      h = 1.0472 * (g - b) / d;\n    } else if (max === r && g < b) {\n      h = 1.0472 * (g - b) / d + 6.2832;\n    } else if (max === g) {\n      h = 1.0472 * (b - r) / d + 2.0944;\n    } else {\n      h = 1.0472 * (r - g) / d + 4.1888;\n    }\n  }\n\n  h = h / 6.2832 * 360.0 + 0;\n\n  // Shift hue to opposite side of wheel and convert to [0-1] value\n  h += shift;\n\n  if (h > 360) {\n    h -= 360;\n  }\n\n  h /= 360;\n\n  // Convert h s and l values into r g and b values\n  // Adapted from answer by Mohsen http://stackoverflow.com/a/9493060/4939630\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    const hue2rgb = function hue2rgb(p, q, t) {\n      if (t < 0) {\n        t += 1; // eslint-disable-line no-param-reassign\n      }\n      if (t > 1) {\n        t -= 1; // eslint-disable-line no-param-reassign\n      }\n      if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n      }\n      if (t < 1 / 2) {\n        return q;\n      }\n      if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n      }\n      return p;\n    };\n\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  r = Math.round(r * 255);\n  g = Math.round(g * 255);\n  b = Math.round(b * 255);\n\n  // Convert r b and g values to hex\n  rgb = b | (g << 8) | (r << 16);\n  return `#${(0x1000000 | rgb).toString(16).substring(1)}`;\n}\n\nexport default getColor;\n","// @flow\n\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport Typography from '@material-ui/core/Typography';\nimport { compose, bindActionCreators } from 'redux';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Navigation from '../../components/Navigation';\nimport Header from '../../components/Header';\nimport Content from '../../components/Content';\nimport { navigateStream } from '../App/actions';\nimport getColor from '../../lib/colors';\n\nconst styles = (theme:Object) => ({ // eslint-disable-line no-unused-vars\n  paper: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      position: 'absolute',\n      top: theme.spacing(2),\n      left: theme.spacing(2),\n      right: theme.spacing(2),\n      bottom: theme.spacing(2),\n    },\n    textAlign: 'center',\n  },\n  button: {\n    marginTop: '20px',\n  },\n  splash: {\n    fontFamily: theme.typography.fontFamily,\n    fontSize: 240,\n    lineHeight: '240px',\n    fontWeight: 300,\n    [theme.breakpoints.down('sm')]: {\n      fontSize: 140,\n      lineHeight: '160px',\n    },\n  },\n  title: {\n    marginBottom: '30px',\n  },\n  body1: {\n    maxWidth: '32em',\n  },\n});\n\n\ntype Props = {\n  classes: ClassesType,\n  navigateStream: Function,\n};\n\nexport class NotFoundPage extends React.PureComponent<Props> { // eslint-disable-line react/prefer-stateless-function\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Helmet>\n          <title>Bolt ðŸ”© 404, Resource Not Round</title>\n        </Helmet>\n        <Header showSearch={false} />\n        <Navigation />\n        <Content>\n          <Paper elevation={1} className={classes.paper}>\n            <div className={classes.splash}>\n              <span style={{ color: getColor('404', 0) }}>4</span>\n              <span style={{ color: getColor('404', 1) }}>0</span>\n              <span style={{ color: getColor('404', 2) }}>4</span>\n            </div>\n            <Typography gutterBottom variant=\"h4\" className={classes.title}>The page you requested does not exist.</Typography>\n            <Typography gutterBottom variant=\"subtitle1\" className={classes.body1}>If you clicked on a link, the link may be broken. If you entered a web address, please check that it was entered correctly.</Typography>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={this.props.navigateStream}\n              className={classes.button}\n            >\n              Return Home\n            </Button>\n          </Paper>\n        </Content>\n      </React.Fragment>\n    );\n  }\n}\n\nconst withConnect = connect(\n  null,\n  (dispatch: Function): Object => bindActionCreators({ navigateStream }, dispatch),\n);\n\nexport default compose(\n  withStyles(styles),\n  withConnect,\n)(NotFoundPage);\n"],"sourceRoot":""}