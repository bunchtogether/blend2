{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/superagent/lib/client.js","webpack:///./node_modules/route-parser/lib/route/nodes.js","webpack:///./node_modules/route-parser/lib/route/visitors/create_visitor.js","webpack:///./node_modules/superagent/lib/is-object.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/isomorphic-ws/browser.js","webpack:///./node_modules/route-parser/index.js","webpack:///./node_modules/route-parser/lib/route.js","webpack:///./node_modules/route-parser/lib/route/parser.js","webpack:///./node_modules/route-parser/lib/route/compiled-grammar.js","webpack:///./node_modules/route-parser/lib/route/visitors/regexp.js","webpack:///./node_modules/route-parser/lib/route/visitors/reverse.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/superagent/lib/request-base.js","webpack:///./node_modules/superagent/lib/response-base.js","webpack:///./node_modules/superagent/lib/utils.js","webpack:///./node_modules/superagent/lib/agent-base.js","webpack:///./src/client/server-detection.js","webpack:///./node_modules/flatted/esm/index.js","webpack:///./src/client/logger.js","webpack:///./src/client/client.js","webpack:///./src/static/player/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","window","self","console","warn","this","Emitter","RequestBase","isObject","ResponseBase","Agent","noop","request","method","url","Request","end","arguments","length","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","e","Error","trim","replace","serialize","obj","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","forEach","v","subkey","push","encodeURIComponent","parseString","str","split","pair","pos","len","indexOf","decodeURIComponent","slice","isJSON","mime","test","Response","req","xhr","text","responseType","responseText","statusText","status","_setStatusProperties","header","headers","lines","fields","index","line","field","toLowerCase","parseHeader","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","body","response","_parseBody","_query","_header","on","new_err","err","res","parse","original","rawResponse","statusCode","callback","emit","_isResponseOK","custom_err","del","data","fn","send","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","type","_parser","toError","msg","set","accept","auth","user","pass","options","btoa","_auth","string","query","attach","file","_data","_getFormData","append","_formData","FormData","_shouldRetry","_retry","_callback","clearTimeout","_maxRetries","retries","_retries","crossDomainError","crossDomain","buffer","ca","agent","pipe","write","_isHost","toString","_endCalled","_finalizeQueryString","_end","_aborted","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","handleProgress","direction","total","percent","loaded","hasListeners","onprogress","upload","username","password","open","_withCredentials","withCredentials","contentType","_serializer","setRequestHeader","_setDefaults","head","patch","post","put","createNode","displayName","props","children","Root","Concat","Literal","Splat","Param","Optional","nodeTypes","keys","handlers","nodeType","visit","node","context","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","EventEmitter","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","String","emitter","count","_onceWrap","state","fired","wrapFn","wrapped","removeListener","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","handler","listeners","addListener","prependListener","once","prependOnceListener","list","position","originalListener","shift","pop","spliceOne","off","removeAllListeners","rawListeners","eventNames","global","ws","WebSocket","MozWebSocket","Route","Parser","RegexpVisitor","ReverseVisitor","spec","route","ast","match","path","matched","reverse","params","parser","yy","k","$V0","$V1","$V2","$V3","$V4","trace","symbols_","expressions","EOF","expression","optional","literal","splat","param","(",")","LITERAL","SPLAT","PARAM","$accept","$end","terminals_","2","5","11","12","13","14","15","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","table","3","4","6","7","8","9","10","1","defaultActions","parseError","hash","recoverable","_parseError","input","stack","vstack","lstack","recovering","lexer","sharedState","setInput","yylloc","yyloc","ranges","symbol","preErrorSymbol","action","newState","expected","lex","token","yyval","errStr","showPosition","loc","first_line","last_line","first_column","last_column","range","_input","_more","_backtrack","done","conditionStack","offset","ch","unput","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","upcomingInput","next","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","INITIAL","inclusive","createVisitor","escapeRegExp","Matcher","captures","re","exec","matchParams","capture","reduce","memo","child","childResult","RegExp","childResults","map","some","decodeURI","encodeURI","g","mixin","addEventListener","event","_callbacks","removeEventListener","cb","callbacks","splice","_timer","timeout","_timeout","_responseTimeout","option","deadline","retry","_retryCallback","ERROR_CODES","override","code","then","resolve","_fullfilledPromise","Promise","innerResolve","innerReject","use","ok","_okCallback","getHeader","unset","abort","base64Encoder","redirects","_maxRedirects","maxResponseSize","_maxResponseSize","toJSON","isObj","sortQuery","sort","_sort","queryArr","substring","_appendQueryString","_timeoutError","reason","errno","setTimeout","utils","ct","links","link","parseLinks","statusType","info","redirect","clientError","serverError","created","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity","parts","cleanHeader","changesOrigin","_defaults","def","server_detection","superagent","Flatted","Primitive","primitive","reviver","Primitives","primitives","tmp","revive","parsed","output","has","add","Set","","replacer","space","firstRun","known","Map","after","blendServerDetected","blendServerDetectedPromise","exists","log","level","description","color","sanitizedValue","debug","BlendClient","constructor","element","streamUrl","super","videoLogger","makeBlendLogger","mediaSourceLogger","videoBufferLogger","audioBufferLogger","webSocketLogger","setupElementLogging","openWebSocket","setupMediaSource","videoQueue","audioQueue","mediaError","MEDIA_ERR_DECODE","reset","[object Object]","closeWebSocket","removeAttribute","load","close","address","heartbeatInterval","binaryType","onopen","setInterval","Uint8Array","onclose","clearInterval","wasClean","onmessage","typedArray","messageType","audioBuffer","updating","appendBuffer","videoBuffer","onerror","onClose","onError","mediaSource","MediaSource","setupMediaSourceLogging","src","URL","createObjectURL","handle","addSourceBuffer","setupVideoBufferLogging","async","setupAudioBufferLogging","nextBufferedSegmentInterval","skipToNextBufferedSegment","buffered","segmentStart","start","currentTime","play","windowLogger","urlRegex","urlMatch","href","document","querySelector","initialize"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 18);\n","/**\n * Root reference for iframes.\n */\n\nlet root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nconst Emitter = require('component-emitter');\nconst RequestBase = require('./request-base');\nconst isObject = require('./is-object');\nconst ResponseBase = require('./response-base');\nconst Agent = require('./agent-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nconst request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only version of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nconst trim = ''.trim\n  ? s => s.trim()\n  : s => s.replace(/(^\\s*|\\s*$)/g, '');\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n  for (const key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(v => {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(const subkey in val) {\n        pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\nrequest.serializeObject = serialize;\n\n/**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify\n};\n\n/**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    if (index === -1) { // could be empty line, just skip it\n      continue;\n    }\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[\\/+]json($|[^-\\w])/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  let status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str) {\n  let parse = request.parse[this.type];\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  const req = this.req;\n  const method = req.method;\n  const url = req.url;\n\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    let new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch(custom_err) {\n      new_err = custom_err; // ok() callback can throw\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (1 === arguments.length) pass = '';\n  if (typeof pass === 'object' && pass !== null) { // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    };\n  }\n\n  const encoder = string => {\n    if ('function' === typeof btoa) {\n      return btoa(string);\n    }\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (file) {\n    if (this._data) {\n      throw Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  const err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = () => {\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._end = function() {\n  if (this._aborted) return this.callback(Error(\"The request has been aborted even before .end() was called\"));\n\n  const self = this;\n  const xhr = (this.xhr = request.getXHR());\n  let data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = () => {\n    const readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    let status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (const field in this.header) {\n    if (null == this.header[field]) continue;\n\n    if (this.header.hasOwnProperty(field))\n      xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n};\n\nrequest.agent = () => new Agent();\n\n[\"GET\", \"POST\", \"OPTIONS\", \"PATCH\", \"PUT\", \"DELETE\"].forEach(method => {\n  Agent.prototype[method.toLowerCase()] = function(url, fn) {\n    const req = new request.Request(method, url);\n    this._setDefaults(req);\n    if (fn) {\n      req.end(fn);\n    }\n    return req;\n  };\n});\n\nAgent.prototype.del = Agent.prototype['delete'];\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request('GET', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = (url, data, fn) => {\n  const req = request('HEAD', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = (url, data, fn) => {\n  const req = request('OPTIONS', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn) {\n  const req = request('DELETE', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request('PATCH', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = (url, data, fn) => {\n  const req = request('POST', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = (url, data, fn) => {\n  const req = request('PUT', url);\n  if ('function' == typeof data) (fn = data), (data = null);\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","'use strict';\n/** @module route/nodes */\n\n\n/**\n * Create a node for use with the parser, giving it a constructor that takes\n * props, children, and returns an object with props, children, and a\n * displayName.\n * @param  {String} displayName The display name for the node\n * @return {{displayName: string, props: Object, children: Array}}\n */\nfunction createNode(displayName) {\n  return function(props, children) {\n    return {\n      displayName: displayName,\n      props: props,\n      children: children || []\n    };\n  };\n}\n\nmodule.exports = {\n  Root: createNode('Root'),\n  Concat: createNode('Concat'),\n  Literal: createNode('Literal'),\n  Splat: createNode('Splat'),\n  Param: createNode('Param'),\n  Optional: createNode('Optional')\n};\n","'use strict';\n/**\n * @module route/visitors/create_visitor\n */\n\nvar nodeTypes = Object.keys(require('../nodes'));\n\n/**\n * Helper for creating visitors. Take an object of node name to handler\n * mappings, returns an object with a \"visit\" method that can be called\n * @param  {Object.<string,function(node,context)>} handlers A mapping of node\n * type to visitor functions\n * @return {{visit: function(node,context)}}  A visitor object with a \"visit\"\n * method that can be called on a node with a context\n */\nfunction createVisitor(handlers) {\n  nodeTypes.forEach(function(nodeType) {\n    if( typeof handlers[nodeType] === 'undefined') {\n      throw new Error('No handler defined for ' + nodeType.displayName);\n    }\n\n  });\n\n  return {\n    /**\n     * Call the given handler for this node type\n     * @param  {Object} node    the AST node\n     * @param  {Object} context context to pass through to handlers\n     * @return {Object}\n     */\n    visit: function(node, context) {\n      return this.handlers[node.displayName].call(this,node, context);\n    },\n    handlers: handlers\n  };\n}\n\nmodule.exports = createVisitor;","'use strict';\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","/**\n * @module Passage\n */\n'use strict';\n\nvar Route = require('./lib/route');\n\n\nmodule.exports = Route;","'use strict';\nvar Parser = require('./route/parser'),\n    RegexpVisitor = require('./route/visitors/regexp'),\n    ReverseVisitor = require('./route/visitors/reverse');\n\nRoute.prototype = Object.create(null)\n\n/**\n * Match a path against this route, returning the matched parameters if\n * it matches, false if not.\n * @example\n * var route = new Route('/this/is/my/route')\n * route.match('/this/is/my/route') // -> {}\n * @example\n * var route = new Route('/:one/:two')\n * route.match('/foo/bar/') // -> {one: 'foo', two: 'bar'}\n * @param  {string} path the path to match this route against\n * @return {(Object.<string,string>|false)} A map of the matched route\n * parameters, or false if matching failed\n */\nRoute.prototype.match = function(path) {\n  var re = RegexpVisitor.visit(this.ast),\n      matched = re.match(path);\n\n  return matched ? matched : false;\n\n};\n\n/**\n * Reverse a route specification to a path, returning false if it can't be\n * fulfilled\n * @example\n * var route = new Route('/:one/:two')\n * route.reverse({one: 'foo', two: 'bar'}) -> '/foo/bar'\n * @param  {Object} params The parameters to fill in\n * @return {(String|false)} The filled in path\n */\nRoute.prototype.reverse = function(params) {\n  return ReverseVisitor.visit(this.ast, params);\n};\n\n/**\n * Represents a route\n * @example\n * var route = Route('/:foo/:bar');\n * @example\n * var route = Route('/:foo/:bar');\n * @param {string} spec -  the string specification of the route.\n *     use :param for single portion captures, *param for splat style captures,\n *     and () for optional route branches\n * @constructor\n */\nfunction Route(spec) {\n  var route;\n  if (this) {\n    // constructor called with new\n    route = this;\n  } else {\n    // constructor called as a function\n    route = Object.create(Route.prototype);\n  }\n  if( typeof spec === 'undefined' ) {\n    throw new Error('A route spec is required');\n  }\n  route.spec = spec;\n  route.ast = Parser.parse(spec);\n  return route;\n}\n\nmodule.exports = Route;","/**\n * @module route/parser\n */\n'use strict';\n\n/** Wrap the compiled parser with the context to create node objects */\nvar parser = require('./compiled-grammar').parser;\nparser.yy = require('./nodes');\nmodule.exports = parser;\n","/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,9],$V1=[1,10],$V2=[1,11],$V3=[1,12],$V4=[5,11,12,13,14,15];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"expressions\":4,\"EOF\":5,\"expression\":6,\"optional\":7,\"literal\":8,\"splat\":9,\"param\":10,\"(\":11,\")\":12,\"LITERAL\":13,\"SPLAT\":14,\"PARAM\":15,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",11:\"(\",12:\")\",13:\"LITERAL\",14:\"SPLAT\",15:\"PARAM\"},\nproductions_: [0,[3,2],[3,1],[4,2],[4,1],[6,1],[6,1],[6,1],[6,1],[7,3],[8,1],[9,1],[10,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn new yy.Root({},[$$[$0-1]])\nbreak;\ncase 2:\nreturn new yy.Root({},[new yy.Literal({value: ''})])\nbreak;\ncase 3:\nthis.$ = new yy.Concat({},[$$[$0-1],$$[$0]]);\nbreak;\ncase 4: case 5:\nthis.$ = $$[$0];\nbreak;\ncase 6:\nthis.$ = new yy.Literal({value: $$[$0]});\nbreak;\ncase 7:\nthis.$ = new yy.Splat({name: $$[$0]});\nbreak;\ncase 8:\nthis.$ = new yy.Param({name: $$[$0]});\nbreak;\ncase 9:\nthis.$ = new yy.Optional({},[$$[$0-1]]);\nbreak;\ncase 10:\nthis.$ = yytext;\nbreak;\ncase 11: case 12:\nthis.$ = yytext.slice(1);\nbreak;\n}\n},\ntable: [{3:1,4:2,5:[1,3],6:4,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},{1:[3]},{5:[1,13],6:14,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},{1:[2,2]},o($V4,[2,4]),o($V4,[2,5]),o($V4,[2,6]),o($V4,[2,7]),o($V4,[2,8]),{4:15,6:4,7:5,8:6,9:7,10:8,11:$V0,13:$V1,14:$V2,15:$V3},o($V4,[2,10]),o($V4,[2,11]),o($V4,[2,12]),{1:[2,1]},o($V4,[2,3]),{6:14,7:5,8:6,9:7,10:8,11:$V0,12:[1,16],13:$V1,14:$V2,15:$V3},o($V4,[2,9])],\ndefaultActions: {3:[2,2],13:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return \"(\";\nbreak;\ncase 1:return \")\";\nbreak;\ncase 2:return \"SPLAT\";\nbreak;\ncase 3:return \"PARAM\";\nbreak;\ncase 4:return \"LITERAL\";\nbreak;\ncase 5:return \"LITERAL\";\nbreak;\ncase 6:return \"EOF\";\nbreak;\n}\n},\nrules: [/^(?:\\()/,/^(?:\\))/,/^(?:\\*+\\w+)/,/^(?::+\\w+)/,/^(?:[\\w%\\-~\\n]+)/,/^(?:.)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}","'use strict';\n\nvar createVisitor  = require('./create_visitor'),\n    escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n/**\n * @class\n * @private\n */\nfunction Matcher(options) {\n  this.captures = options.captures;\n  this.re = options.re;\n}\n\n/**\n * Try matching a path against the generated regular expression\n * @param  {String} path The path to try to match\n * @return {Object|false}      matched parameters or false\n */\nMatcher.prototype.match = function (path) {\n  var match = this.re.exec(path),\n      matchParams = {};\n\n  if( !match ) {\n    return;\n  }\n\n  this.captures.forEach( function(capture, i) {\n    if( typeof match[i+1] === 'undefined' ) {\n      matchParams[capture] = undefined;\n    }\n    else {\n      matchParams[capture] = decodeURIComponent(match[i+1]);\n    }\n  });\n\n  return matchParams;\n};\n\n/**\n * Visitor for the AST to create a regular expression matcher\n * @class RegexpVisitor\n * @borrows Visitor-visit\n */\nvar RegexpVisitor = createVisitor({\n  'Concat': function(node) {\n    return node.children\n      .reduce(\n        function(memo, child) {\n          var childResult = this.visit(child);\n          return {\n            re: memo.re + childResult.re,\n            captures: memo.captures.concat(childResult.captures)\n          };\n        }.bind(this),\n        {re: '', captures: []}\n      );\n  },\n  'Literal': function(node) {\n    return {\n      re: node.props.value.replace(escapeRegExp, '\\\\$&'),\n      captures: []\n    };\n  },\n\n  'Splat': function(node) {\n    return {\n      re: '([^?]*?)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Param': function(node) {\n    return {\n      re: '([^\\\\/\\\\?]+)',\n      captures: [node.props.name]\n    };\n  },\n\n  'Optional': function(node) {\n    var child = this.visit(node.children[0]);\n    return {\n      re: '(?:' + child.re + ')?',\n      captures: child.captures\n    };\n  },\n\n  'Root': function(node) {\n    var childResult = this.visit(node.children[0]);\n    return new Matcher({\n      re: new RegExp('^' + childResult.re + '(?=\\\\?|$)' ),\n      captures: childResult.captures\n    });\n  }\n});\n\nmodule.exports = RegexpVisitor;","'use strict';\n\nvar createVisitor  = require('./create_visitor');\n\n/**\n * Visitor for the AST to construct a path with filled in parameters\n * @class ReverseVisitor\n * @borrows Visitor-visit\n */\nvar ReverseVisitor = createVisitor({\n  'Concat': function(node, context) {\n    var childResults =  node.children\n      .map( function(child) {\n        return this.visit(child,context);\n      }.bind(this));\n\n    if( childResults.some(function(c) { return c === false; }) ) {\n      return false;\n    }\n    else {\n      return childResults.join('');\n    }\n  },\n\n  'Literal': function(node) {\n    return decodeURI(node.props.value);\n  },\n\n  'Splat': function(node, context) {\n    if( context[node.props.name] ) {\n      return context[node.props.name];\n    }\n    else {\n      return false;\n    }\n  },\n\n  'Param': function(node, context) {\n    if( context[node.props.name] ) {\n      return context[node.props.name];\n    }\n    else {\n      return false;\n    }\n  },\n\n  'Optional': function(node, context) {\n    var childResult = this.visit(node.children[0], context);\n    if( childResult ) {\n      return childResult;\n    }\n    else {\n      return '';\n    }\n  },\n\n  'Root': function(node, context) {\n    context = context || {};\n    var childResult = this.visit(node.children[0], context);\n    if( !childResult ) {\n      return false;\n    }\n    return encodeURI(childResult);\n  }\n});\n\nmodule.exports = ReverseVisitor;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","'use strict';\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nconst isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (const key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  for(const option in options) {\n    switch(option) {\n      case 'deadline':\n        this._timeout = options.deadline;\n        break;\n      case 'response':\n        this._responseTimeout = options.response;\n        break;\n      default:\n        console.warn(\"Unknown timeout option\", option);\n    }\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count, fn){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\nconst ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nRequestBase.prototype._shouldRetry = function(err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(err, res);\n      if (override === true) return true;\n      if (override === false) return false;\n      // undefined falls back to defaults\n    } catch(e) {\n      console.error(e);\n    }\n  }\n  if (res && res.status && res.status >= 500 && res.status != 501) return true;\n  if (err) {\n    if (err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n    // Superagent timeout\n    if (err.timeout && err.code == 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n  return false;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise((innerResolve, innerReject) => {\n      self.on('error', innerReject);\n      self.on('abort', () => {\n        const err = new Error('Aborted');\n        err.code = \"ABORTED\";\n        err.status = this.status;\n        err.method = this.method;\n        err.url = this.url;\n        innerReject(err);\n      });\n      self.end((err, res) => {\n        if (err) innerReject(err);\n        else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype['catch'] = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (const key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n  // name should be either a string or an object.\n  if (null === name || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (const i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function(user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer': // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n  }\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on == undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n\n * @return {Request} for chaining\n */\nRequestBase.prototype.maxResponseSize = function(n){\n  if ('number' !== typeof n) {\n    throw TypeError(\"Invalid argument\");\n  }\n  this._maxResponseSize = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function() {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header,\n  };\n};\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  const isObj = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (const key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? `${this._data}&${data}`\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\nRequestBase.prototype._finalizeQueryString = function(){\n  const query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n    if (index >= 0) {\n      const queryArr = this.url.substring(index + 1).split('&');\n      if ('function' === typeof this._sort) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n// For backwards compat only\nRequestBase.prototype._appendQueryString = () => {console.trace(\"Unsupported\");}\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout, errno){\n  if (this._aborted) {\n    return;\n  }\n  const err = new Error(`${reason + timeout}ms exceeded`);\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  const self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n};\n","'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (const key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field) {\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    const ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    const params = utils.params(ct);\n    for (const key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    const type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.created = 201 == status;\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n    this.unprocessableEntity = 422 == status;\n};\n","'use strict';\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = str => str.split(/ *; */).shift();\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = str => str.split(/ *; */).reduce((obj, str) => {\n  const parts = str.split(/ *= */);\n  const key = parts.shift();\n  const val = parts.shift();\n\n  if (key && val) obj[key] = val;\n  return obj;\n}, {});\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = str => str.split(/ *, */).reduce((obj, str) => {\n  const parts = str.split(/ *; */);\n  const url = parts[0].slice(1, -1);\n  const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n  obj[rel] = url;\n  return obj;\n}, {});\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  // secuirty\n  if (changesOrigin) {\n    delete header['authorization'];\n    delete header['cookie'];\n  }\n  return header;\n};\n","function Agent() {\n  this._defaults = [];\n}\n\n[\"use\", \"on\", \"once\", \"set\", \"query\", \"type\", \"accept\", \"auth\", \"withCredentials\", \"sortQuery\", \"retry\", \"ok\", \"redirects\",\n \"timeout\", \"buffer\", \"serialize\", \"parse\", \"ca\", \"key\", \"pfx\", \"cert\"].forEach(fn => {\n  /** Default setting for all requests from this agent */\n  Agent.prototype[fn] = function(...args) {\n    this._defaults.push({fn, args});\n    return this;\n  }\n});\n\nAgent.prototype._setDefaults = function(req) {\n    this._defaults.forEach(def => {\n      req[def.fn].apply(req, def.args);\n    });\n};\n\nmodule.exports = Agent;\n","// @flow\n\nimport superagent from 'superagent';\n\nexport default (async () => {\n  try {\n    await superagent.get('http://127.0.0.1:61340/api/1.0/stream');\n    return true;\n  } catch(error) {\n    return false;\n  }\n  return false;\n})();","var Flatted = (function (Primitive, primitive) {\n\n  /*!\n   * ISC License\n   *\n   * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n\n  var Flatted = {\n\n    parse: function parse(text, reviver) {\n      var input = JSON.parse(text, Primitives).map(primitives);\n      var value = input[0];\n      var $ = reviver || noop;\n      var tmp = typeof value === 'object' && value ?\n                  revive(input, new Set, value, $) :\n                  value;\n      return $.call({'': tmp}, '', tmp);\n    },\n\n    stringify: function stringify(value, replacer, space) {\n      for (var\n        firstRun,\n        known = new Map,\n        input = [],\n        output = [],\n        $ = replacer && typeof replacer === typeof input ?\n              function (k, v) {\n                if (k === '' || -1 < replacer.indexOf(k)) return v;\n              } :\n              (replacer || noop),\n        i = +set(known, input, $.call({'': value}, '', value)),\n        replace = function (key, value) {\n          if (firstRun) {\n            firstRun = !firstRun;\n            return value;\n            // this was invoking twice each root object\n            // return i < 1 ? value : $.call(this, key, value);\n          }\n          var after = $.call(this, key, value);\n          switch (typeof after) {\n            case 'object':\n              if (after === null) return after;\n            case primitive:\n              return known.get(after) || set(known, input, after);\n          }\n          return after;\n        };\n        i < input.length; i++\n      ) {\n        firstRun = true;\n        output[i] = JSON.stringify(input[i], replace, space);\n      }\n      return '[' + output.join(',') + ']';\n    }\n\n  };\n\n  return Flatted;\n\n  function noop(key, value) {\n    return value;\n  }\n\n  function revive(input, parsed, output, $) {\n    return Object.keys(output).reduce(\n      function (output, key) {\n        var value = output[key];\n        if (value instanceof Primitive) {\n          var tmp = input[value];\n          if (typeof tmp === 'object' && !parsed.has(tmp)) {\n            parsed.add(tmp);\n            output[key] = $.call(output, key, revive(input, parsed, tmp, $));\n          } else {\n            output[key] = $.call(output, key, tmp);\n          }\n        } else\n          output[key] = $.call(output, key, value);\n        return output;\n      },\n      output\n    );\n  }\n\n  function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  }\n\n  // the two kinds of primitives\n  //  1. the real one\n  //  2. the wrapped one\n\n  function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  }\n\n  function Primitives(key, value) {\n    return typeof value === primitive ? new Primitive(value) : value;\n  }\n\n}(String, 'string'));\nexport default Flatted;\nexport const parse = Flatted.parse;\nexport const stringify = Flatted.stringify;\n","// @flow\n\n/* eslint-disable no-console */\n\nimport superagent from 'superagent';\nimport { stringify } from 'flatted';\nimport blendServerDetectedPromise from './server-detection';\n\nlet blendServerDetected = false;\n\nblendServerDetectedPromise.then((exists) => {\n  blendServerDetected = exists;\n});\n\nconst log = (name:string, level:string, value:any, description?: string) => {\n  let color = 'gray';\n  switch (level) {\n    case 'debug':\n      color = 'blue';\n      break;\n    case 'info':\n      color = 'green';\n      break;\n    case 'warn':\n      color = 'orange';\n      break;\n    case 'error':\n      color = 'red';\n      break;\n    default:\n      throw new Error(`Unknown level ${level}`);\n  }\n  if (typeof value === 'string') {\n    console.log(`%c${name}: %c${value}`, `color:${color}; font-weight: bold`, `color:${color}`);\n    if(blendServerDetected) {\n      superagent.post('/api/1.0/log').set('Content-Type', 'application/json').send({ name, level, value, description }).end((error) => {\n        if (error) {\n          console.error('Unable to post to logging API');\n          console.error(error);\n        }\n      });      \n    }\n  } else {\n    const sanitizedValue = JSON.parse(stringify(value));\n    JSON.stringify(sanitizedValue, null, 2).split('\\n').forEach((line) => {\n      console.log(`%c${name}: %c${line}`, `color:${color}; font-weight: bold`, `color:${color}`);\n    });\n    if(blendServerDetected) {\n      superagent.post('/api/1.0/log').set('Content-Type', 'application/json').send({ name, level, value: sanitizedValue, description }).end((error) => {\n        if (error) {\n          console.error('Unable to post to logging API');\n          console.error(error);\n        }\n      });\n    };\n  }\n  if (typeof description === 'string') {\n    console.log(`%c\\t${description}`, 'color:gray');\n  }\n};\n\nexport default (name: string) => ({\n  debug: (value:any, description?: string) => {\n    log(name, 'debug', value, description);\n  },\n  info: (value:any, description?: string) => {\n    log(name, 'info', value, description);\n  },\n  warn: (value:any, description?: string) => {\n    log(name, 'warn', value, description);\n  },\n  error: (value:any, description?: string) => {\n    log(name, 'error', value, description);\n  },\n});\n","// @flow\n\nimport { EventEmitter } from 'events';\nimport WebSocket  from 'isomorphic-ws';\nimport superagent from 'superagent';\nimport blendServerDetectedPromise from './server-detection';\nimport makeBlendLogger from './logger';\n\n/**\n * Class representing a Blend Client\n */\nexport default class BlendClient extends EventEmitter {\n\n  constructor(element: HTMLVideoElement, streamUrl:string) {\n    super();\n    this.element = element;\n    this.videoLogger = makeBlendLogger(`${streamUrl} Video Element`);\n    this.mediaSourceLogger = makeBlendLogger(`${streamUrl} Media Source`);\n    this.videoBufferLogger = makeBlendLogger(`${streamUrl} Video Source Buffer`);\n    this.audioBufferLogger = makeBlendLogger(`${streamUrl} Audio Source Buffer`);\n    this.webSocketLogger = makeBlendLogger(`${streamUrl} WebSocket`);\n    this.setupElementLogging(element);\n    this.openWebSocket(streamUrl);\n    this.setupMediaSource(element);\n    this.videoQueue = [];\n    this.audioQueue = [];\n    element.addEventListener('error', (event:Event) => {\n      if (event.type !== 'error') {\n        return;\n      }\n      const mediaError = element.error;\n      if (mediaError && mediaError.code === mediaError.MEDIA_ERR_DECODE) {\n        this.reset();\n      }\n    });\n  }\n\n  async close() {\n    await this.closeWebSocket();\n    this.element.removeAttribute(\"src\");\n    this.element.load();\n  }\n\n  async reset() {\n    await this.close();\n  }\n\n  /**\n   * Connects to a server.\n   * @param {string} address Stream URL\n   * @return {Promise<void>}\n   */\n  async openWebSocket(streamUrl:string) {\n\n    const address = `ws://127.0.0.1:61340/api/1.0/stream/${encodeURIComponent(streamUrl)}/`;\n    \n    const blendServerDetected = await blendServerDetectedPromise;\n\n    if(!blendServerDetected) {\n      this.webSocketLogger.error(`Unable to open web socket connection to ${address}, Blend Server not detected`);\n      return;\n    }\n\n    const ws = new WebSocket(address);\n\n    let heartbeatInterval;\n\n    ws.binaryType = 'arraybuffer';\n\n    ws.onopen = () => {\n      this.emit('open');\n      this.ws = ws;\n      heartbeatInterval = setInterval(() => {\n        if (ws.readyState === 1) {\n          ws.send(new Uint8Array([]));\n        }\n      }, 5000);\n    };\n\n    ws.onclose = (event) => {\n      clearInterval(heartbeatInterval);\n      const { wasClean, reason, code } = event;\n      console.log(`${wasClean ? 'Cleanly' : 'Uncleanly'} closed websocket connection to ${address} with code ${code}${reason ? `: ${reason}` : ''}`);\n      delete this.ws;\n      this.emit('close', code, reason);\n    };\n\n    ws.onmessage = (event) => {\n      const typedArray = new Uint8Array(event.data);\n      const data = typedArray.slice(1);\n      const messageType = typedArray[0];\n      if(messageType === 0) {\n        const audioBuffer = this.audioBuffer;\n        const audioQueue = this.audioQueue;\n        if(audioBuffer) {\n          if (audioQueue.length > 0 || audioBuffer.updating) {\n            audioQueue.push(data);\n          } else {\n            try {\n              audioBuffer.appendBuffer(data);\n            } catch(error) {\n              this.audioBufferLogger(`${error.message}, code: ${error.code}`)\n            }\n          }\n        } else {\n          console.log(\"QUEUE AUDIO\");\n          audioQueue.push(data);\n        }\n      } else if(messageType === 1) {\n        const videoBuffer = this.videoBuffer;\n        const videoQueue = this.videoQueue;\n        if(videoBuffer) {\n          if (videoQueue.length > 0 || videoBuffer.updating) {\n            videoQueue.push(data);\n          } else {\n            try {\n              videoBuffer.appendBuffer(data);\n            } catch(error) {\n              this.videoBufferLogger(`${error.message}, code: ${error.code}`)\n            }\n          }\n        } else {\n          console.log(\"QUEUE VIDEO\");\n          videoQueue.push(data);\n        }\n      }\n    };\n\n    ws.onerror = (event) => {\n      console.log(event);\n      this.emit('error', event);\n    };\n\n  }\n\n  /**\n   * Close connection to server.\n   * @param {number} [code] Websocket close reason code to send to the server\n   * @param {string} [reason] Websocket close reason to send to the server\n   * @return {Promise<void>}\n   */\n  async closeWebSocket(code?: number, reason?: string) {\n    if (!this.ws) {\n      return;\n    }\n    await new Promise((resolve, reject) => {\n      const onClose = () => {\n        this.removeListener('error', onError);\n        resolve();\n      };\n      const onError = (event: Event) => {\n        this.removeListener('close', onClose);\n        reject(event);\n      };\n      this.once('error', onError);\n      this.once('close', onClose);\n      this.ws.close(code, reason);\n    });\n  }\n\n  async setupMediaSource(element: HTMLVideoElement) {\n    const mediaSource = new MediaSource();\n    this.setupMediaSourceLogging(mediaSource);\n    element.src = URL.createObjectURL(mediaSource);\n    await new Promise((resolve) => {\n      const handle = () => {\n        mediaSource.removeEventListener('sourceopen', handle);\n        resolve();\n      };\n      mediaSource.addEventListener('sourceopen', handle);\n    });\n    const videoBuffer = mediaSource.addSourceBuffer('video/mp4; codecs=\"avc1.64001f\"');\n    this.videoBuffer = videoBuffer;\n    this.setupVideoBufferLogging(videoBuffer);\n    videoBuffer.addEventListener('updateend', async () => {\n      if (this.videoQueue.length > 0 && !videoBuffer.updating) {\n        try {\n          videoBuffer.appendBuffer(this.videoQueue.shift());\n        } catch(error) {\n          console.log(`${error.message}, code: ${error.code}`)\n        }\n      }\n    });\n    const audioBuffer = mediaSource.addSourceBuffer('audio/aac');\n    this.audioBuffer = audioBuffer;\n    this.setupAudioBufferLogging(audioBuffer);\n    audioBuffer.addEventListener('updateend', async () => {\n      if (this.audioQueue.length > 0 && !audioBuffer.updating) {\n        try {\n          audioBuffer.appendBuffer(this.audioQueue.shift());\n        } catch(error) {\n          console.log(`${error.message}, code: ${error.code}`)\n        }\n      }\n    });\n    if (this.videoQueue.length > 0 && !videoBuffer.updating) {\n        try {\n          videoBuffer.appendBuffer(this.videoQueue.shift());\n        } catch(error) {\n          this.videoBufferLogger(`${error.message}, code: ${error.code}`)\n        }\n    }\n    if (this.audioQueue.length > 0 && !audioBuffer.updating) {\n        try {\n          audioBuffer.appendBuffer(this.audioQueue.shift());\n        } catch(error) {\n          this.audioBufferLogger(`${error.message}, code: ${error.code}`)\n        }\n    }\n    let nextBufferedSegmentInterval;\n    const skipToNextBufferedSegment = () => {\n      for (let i = 0; i < videoBuffer.buffered.length; i += 1) {\n        const segmentStart = videoBuffer.buffered.start(i);\n        if (segmentStart > element.currentTime) {\n          this.videoLogger.warn(`Skipping ${segmentStart - element.currentTime} ms`);\n          element.currentTime = segmentStart;\n          return;\n        }\n      }\n    };\n    element.addEventListener('waiting', (event:Event) => {\n      clearInterval(nextBufferedSegmentInterval);\n      nextBufferedSegmentInterval = setInterval(() => {\n        skipToNextBufferedSegment();\n      }, 100);\n      skipToNextBufferedSegment();\n    });\n    element.addEventListener('canplay', (event:Event) => {\n      clearInterval(nextBufferedSegmentInterval);\n      element.play();\n    });\n  }\n\n  setupMediaSourceLogging(mediaSource: MediaSource) {\n    const mediaSourceLogger = this.mediaSourceLogger;\n    mediaSource.addEventListener('sourceopen', (event:Event) => {\n      mediaSourceLogger.info('sourceopen');\n    });\n    mediaSource.addEventListener('sourceended', (event:Event) => {\n      mediaSourceLogger.info('sourceended');\n    });\n    mediaSource.addEventListener('sourceclose', (event:Event) => {\n      mediaSourceLogger.info('sourceclose');\n    });\n    mediaSource.addEventListener('updatestart', (event:Event) => {\n      mediaSourceLogger.info('updatestart');\n    });\n    mediaSource.addEventListener('update', (event:Event) => {\n      mediaSourceLogger.info('update');\n    });\n    mediaSource.addEventListener('updateend', (event:Event) => {\n      mediaSourceLogger.info('updateend');\n    });\n    mediaSource.addEventListener('error', (event:Event) => {\n      mediaSourceLogger.info('error');\n    });\n    mediaSource.addEventListener('abort', (event:Event) => {\n      mediaSourceLogger.info('abort');\n    });\n    mediaSource.addEventListener('addsourcevideoBuffer', (event:Event) => {\n      mediaSourceLogger.info('addsourcevideoBuffer');\n    });\n    mediaSource.addEventListener('removesourcevideoBuffer', (event:Event) => {\n      mediaSourceLogger.info('removesourcevideoBuffer');\n    });\n  }\n\n  setupVideoBufferLogging(videoBuffer: SourceBuffer) {\n    const videoBufferLogger = this.videoBufferLogger;\n    videoBuffer.addEventListener('sourceopen', (event:Event) => {\n      videoBufferLogger.info('sourceopen');\n    });\n    videoBuffer.addEventListener('sourceended', (event:Event) => {\n      videoBufferLogger.info('sourceended');\n    });\n    videoBuffer.addEventListener('sourceclose', (event:Event) => {\n      videoBufferLogger.info('sourceclose');\n    });\n    videoBuffer.addEventListener('error', (event:Event) => {\n      videoBufferLogger.info('error');\n      console.log(event);\n      console.log(videoBuffer);\n    });\n    videoBuffer.addEventListener('abort', (event:Event) => {\n      videoBufferLogger.info('abort');\n    });\n    videoBuffer.addEventListener('addsourcevideoBuffer', (event:Event) => {\n      videoBufferLogger.info('addsourcevideoBuffer');\n    });\n    videoBuffer.addEventListener('removesourcevideoBuffer', (event:Event) => {\n      videoBufferLogger.info('removesourcevideoBuffer');\n    });\n  }\n\n  setupAudioBufferLogging(audioBuffer: SourceBuffer) {\n    const audioBufferLogger = this.audioBufferLogger;\n    audioBuffer.addEventListener('sourceopen', (event:Event) => {\n      audioBufferLogger.info('sourceopen');\n    });\n    audioBuffer.addEventListener('sourceended', (event:Event) => {\n      audioBufferLogger.info('sourceended');\n    });\n    audioBuffer.addEventListener('sourceclose', (event:Event) => {\n      audioBufferLogger.info('sourceclose');\n    });\n    audioBuffer.addEventListener('error', (event:Event) => {\n      audioBufferLogger.info('error');\n      console.log(event);\n      console.log(audioBuffer);\n    });\n    audioBuffer.addEventListener('abort', (event:Event) => {\n      audioBufferLogger.info('abort');\n    });\n    audioBuffer.addEventListener('addsourcebuffer', (event:Event) => {\n      audioBufferLogger.info('addsourcebuffer');\n    });\n    audioBuffer.addEventListener('removesourcebuffer', (event:Event) => {\n      audioBufferLogger.info('removesourcebuffer');\n    });\n  }\n\n  setupElementLogging(element: HTMLVideoElement) {\n    const videoLogger = this.videoLogger;\n    element.addEventListener('resize', (event:Event) => {\n      videoLogger.info('abort', 'Sent when playback is aborted; for example, if the media is playing and is restarted from the beginning, this event is sent');\n    });\n    element.addEventListener('canplay', (event:Event) => {\n      videoLogger.info('canplay', 'Sent when enough data is available that the media can be played, at least for a couple of frames.  This corresponds to the HAVE_ENOUGH_DATA readyState');\n    });\n    element.addEventListener('canplaythrough', (event:Event) => {\n      videoLogger.info('canplaythrough', 'Sent when the ready state changes to CAN_PLAY_THROUGH, indicating that the entire media can be played without interruption, assuming the download rate remains at least at the current level. It will also be fired when playback is toggled between paused and playing. Note: Manually setting the currentTime will eventually fire a canplaythrough event in firefox. Other browsers might not fire this event');\n    });\n    element.addEventListener('durationchange', (event:Event) => {\n      videoLogger.info('durationchange', 'The metadata has loaded or changed, indicating a change in duration of the media.  This is sent, for example, when the media has loaded enough that the duration is known');\n    });\n    element.addEventListener('emptied', (event:Event) => {\n      videoLogger.info('emptied', 'The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it');\n    });\n    element.addEventListener('encrypted', (event:Event) => {\n      videoLogger.info('encrypted', ' The user agent has encountered initialization data in the media data');\n    });\n    element.addEventListener('ended', (event:Event) => {\n      videoLogger.info('ended', 'Sent when playback completes');\n    });\n    element.addEventListener('error', (event:ProgressEvent) => {\n      const mediaError = element.error;\n      const message = mediaError && mediaError.message ? mediaError.message : null;\n      if (mediaError && message) {\n        videoLogger.error(`${mediaError.code}: ${message}`);\n      } else {\n        videoLogger.error('error', 'Sent when an error occurs.  The element\\'s error attribute contains more information. See HTMLMediaElement.error for details');\n        if (event) {\n          videoLogger.error(event);\n        }\n      }\n    });\n    element.addEventListener('interruptbegin', (event:Event) => {\n      videoLogger.info('interruptbegin', 'Sent when audio playing on a Firefox OS device is interrupted, either because the app playing the audio is sent to the background, or audio in a higher priority audio channel begins to play. See Using the AudioChannels API for more details');\n    });\n    element.addEventListener('interruptend', (event:Event) => {\n      videoLogger.info('interruptend', 'Sent when previously interrupted audio on a Firefox OS device commences playing again — when the interruption ends. This is when the associated app comes back to the foreground, or when the higher priority audio finished playing. See Using the AudioChannels API for more details');\n    });\n    element.addEventListener('loadeddata', (event:Event) => {\n      videoLogger.info('loadeddata', 'The first frame of the media has finished loading');\n    });\n    element.addEventListener('loadedmetadata', (event:Event) => {\n      videoLogger.info('loadedmetadata', 'The media\\'s metadata has finished loading; all attributes now contain as much useful information as they\\'re going to');\n    });\n    element.addEventListener('loadstart', (event:ProgressEvent) => {\n      videoLogger.info('loadstart', 'Sent when loading of the media begins');\n    });\n    element.addEventListener('mozaudioavailable', (event:Event) => {\n      videoLogger.info('mozaudioavailable', 'Sent when an audio videoBuffer is provided to the audio layer for processing; the videoBuffer contains raw audio samples that may or may not already have been played by the time you receive the event');\n    });\n    element.addEventListener('pause', (event:Event) => {\n      videoLogger.info('pause', 'Sent when the playback state is changed to paused (paused property is true)');\n    });\n    element.addEventListener('play', (event:Event) => {\n      videoLogger.info('play', 'Sent when the playback state is no longer paused, as a result of the play method, or the autoplay attribute');\n    });\n    element.addEventListener('playing', (event:Event) => {\n      videoLogger.info('playing', 'Sent when the media has enough data to start playing, after the play event, but also when recovering from being stalled, when looping media restarts, and after seeked, if it was playing before seeking');\n    });\n    element.addEventListener('ratechange', (event:Event) => {\n      videoLogger.info('ratechange', 'Sent when the playback speed changes');\n    });\n    element.addEventListener('seeked', (event:Event) => {\n      videoLogger.info('seeked', 'Sent when a seek operation completes');\n    });\n    element.addEventListener('seeking', (event:Event) => {\n      videoLogger.info('seeking', 'Sent when a seek operation begins');\n    });\n    element.addEventListener('stalled', (event:Event) => {\n      videoLogger.info('stalled', 'Sent when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming');\n    });\n    element.addEventListener('suspend', (event:Event) => {\n      videoLogger.info('suspend', 'Sent when loading of the media is suspended; this may happen either because the download has completed or because it has been paused for any other reason');\n    });\n    element.addEventListener('volumechange', (event:Event) => {\n      videoLogger.info('volumechange', 'Sent when the audio volume changes (both when the volume is set and when the muted attribute is changed)');\n    });\n    element.addEventListener('waiting', (event:Event) => {\n      videoLogger.info('waiting', 'Sent when the requested operation (such as playback) is delayed pending the completion of another operation (such as a seek)');\n    });\n  }\n\n  id:string;\n  address:string;\n  ws: WebSocket;\n  ready: Promise<void>;\n  videoLogger: Object;\n  mediaSourceLogger: Object;\n  videoBufferLogger: Object;\n  audioBufferLogger: Object;\n  webSocketLogger: Object;\n  videoQueue:Array<Uint8Array>;\n  audioQueue:Array<Uint8Array>;\n}\n\n","// @flow\n\n/* eslint-disable no-unused-vars */\n\n\nimport Route from 'route-parser';\nimport { BlendClient, blendServerDetectedPromise, makeBlendLogger } from '../../client';\n\nconst windowLogger = makeBlendLogger('Window');\n\nwindow.addEventListener('unhandledrejection', (event:Event) => {\n  if (event && event.error) {\n    if (event.error.stack) {\n      windowLogger.error(event.error.stack);\n    } else if (event.error.message) {\n      windowLogger.error(event.error.message);\n    } else {\n      windowLogger.error('Unhandled rejection');\n    }\n  } else {\n    windowLogger.error('Unhandled rejection');\n  }\n});\n\nwindow.addEventListener('error', (event:Event) => {\n  if (event && event.error) {\n    if (event.error.stack) {\n      windowLogger.error(event.error.stack);\n    } else if (event.error.message) {\n      windowLogger.error(event.error.message);\n    } else {\n      windowLogger.error('Uncaught error');\n    }\n  } else {\n    windowLogger.error('Uncaught error');\n  }\n});\n\nconst urlRegex = /\\/api\\/1\\.0\\/stream\\/([^\\/]+)\\//;\n\nasync function initialize() {\n\n  const urlMatch = window.location.href.match(urlRegex);\n  if(!urlMatch || !urlMatch[1]) {\n    throw new Error(`Invalid address ${address}`);\n  }\n  const streamUrl = decodeURIComponent(urlMatch[1]);\n\n  const blendServerDetected = await blendServerDetectedPromise;\n\n  if(blendServerDetected) {\n    windowLogger.info(`Blend server detected`);\n  } else {\n    windowLogger.error(`Unable to open web socket connection to ${address}, Blend Server not detected`);\n    return;    \n  }\n\n  const element = document.querySelector('video');\n  if (!element) {\n    throw new Error('Video element does not exist');\n  }\n  const client = new BlendClient(element, streamUrl);\n}\n\ninitialize();\n\n"],"sourceRoot":""}