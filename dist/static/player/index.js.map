{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/@bunchtogether/blend2-client/node_modules/superagent/lib/client.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/@bunchtogether/blend2-client/node_modules/superagent/lib/is-object.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/isomorphic-ws/browser.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/codem-isoboxer/dist/iso_boxer.js","webpack:///./node_modules/lru-cache/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/yallist/yallist.js","webpack:///./node_modules/yallist/iterator.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/@bunchtogether/blend2-client/node_modules/superagent/lib/request-base.js","webpack:///./node_modules/@bunchtogether/blend2-client/node_modules/superagent/lib/response-base.js","webpack:///./node_modules/@bunchtogether/blend2-client/node_modules/superagent/lib/utils.js","webpack:///./node_modules/@bunchtogether/blend2-client/node_modules/superagent/lib/agent-base.js","webpack:///./node_modules/@bunchtogether/blend2-client/dist/server-detection.js","webpack:///./node_modules/flatted/esm/index.js","webpack:///./node_modules/@bunchtogether/blend2-client/dist/logger.js","webpack:///./node_modules/@bunchtogether/blend2-client/dist/client.js","webpack:///./node_modules/@bunchtogether/blend2-client/dist/thumbnail-url.js","webpack:///./src/static/player/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","data","path","size","type","end","subresults","results","length","byteLength","subarray","push","slice","concat","buffer","result","String","fromCharCode","init","reduce","trak","tkhd","version","index","id","mdhd","fragment","trafs","baseTimes","apply","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","traks","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","root","window","self","console","warn","Emitter","RequestBase","isObject","ResponseBase","Agent","noop","method","url","Request","arguments","request","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","err","Error","trim","replace","serialize","obj","pairs","pushEncodedKeyValuePair","join","val","Array","isArray","v","subkey","encodeURIComponent","parseString","str","split","pair","pos","len","indexOf","decodeURIComponent","isJSON","mime","test","Response","req","this","xhr","text","responseType","responseText","statusText","status","_setStatusProperties","headers","lines","fields","line","field","toLowerCase","parseHeader","getAllResponseHeaders","header","getResponseHeader","_setHeaderProperties","_responseType","body","response","_parseBody","_query","_header","on","new_err","res","err2","parse","original","rawResponse","statusCode","callback","emit","_isResponseOK","del","fn","send","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","_parser","toError","msg","set","accept","auth","user","pass","options","btoa","_auth","string","query","attach","file","_data","_getFormData","append","_formData","FormData","_shouldRetry","_retry","_callback","clearTimeout","_maxRetries","retries","_retries","crossDomainError","crossDomain","agent","ca","write","pipe","_isHost","toString","_endCalled","_finalizeQueryString","_end","_setUploadTimeout","_uploadTimeout","_uploadTimeoutTimer","setTimeout","_timeoutError","_aborted","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","handleProgress","direction","e","total","percent","loaded","hasListeners","addEventListener","upload","username","password","open","_withCredentials","withCredentials","contentType","_serializer","setRequestHeader","_setDefaults","delete","head","patch","post","put","parseSei","bytes","payloadType","payloadSize","payload","parseUserData","sei","parseCaptionPackets","pts","userData","count","offset","ccData","discardEmulationPreventionBytes","newLength","newData","emulationPreventionBytesPositions","Uint8Array","sourceIndex","shift","USER_DATA_REGISTERED_ITU_T_T35","ReflectOwnKeys","R","Reflect","ReflectApply","target","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","Number","isNaN","EventEmitter","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","emitter","_onceWrap","state","fired","wrapFn","wrapped","removeListener","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","handler","listeners","addListener","prependListener","once","prependOnceListener","list","position","originalListener","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","global","ws","WebSocket","MozWebSocket","CaptionStream","probe","inspect","mapToSample","samples","approximateOffset","sample","parseCaptionNals","segment","videoTrackId","mdats","captionNals","mdatTrafPairs","mdat","matchingTraf","seiNals","headerInfo","parseTfhd","baseMediaDecodeTime","parseTfdt","truns","avcStream","seiNal","lastMatchedSample","avcView","matchingSample","nalUnitType","escapedRBSP","dts","findSeiNals","currentDts","defaultSampleDuration","defaultSampleSize","allSamples","trun","parseTrun","duration","compositionTimeOffset","parseSamples","captionStream","segmentCache","parsedCaptions","isInitialized","event","startPts","endTime","endPts","captions","captionStreams","stream","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","flushStream","nals","nal","flush","clearParsedCaptions","resetCaptionStream","reset","clearAllCaptions","ISOBoxer","parseBuffer","arrayBuffer","ISOFile","addBoxProcessor","parser","ISOBox","_boxProcessors","createFile","createBox","parent","newBox","createFullBox","flags","Utils","dataViewToString","dataView","encoding","impliedEncoding","TextDecoder","decode","a","utf8ToByteArray","u","TextEncoder","encode","charCodeAt","appendBox","box","_offset","_cursor","_root","_raw","_parent","boxes","splice","Cursor","initialOffset","fetch","fetchAll","returnEarly","_sweep","getLength","_rawo","_parseBox","_boxContainers","_procField","_parsing","_readField","_writeField","_procFieldArray","_procFullBox","_procEntries","_procSubEntries","entry","_procEntryField","_procSubBoxes","_readUint","_readInt","_readTemplate","_readTerminatedString","_readString","_readData","_readUTF8String","getInt8","getInt16","getInt32","s1","s2","getUint16","char","_incomplete","largesize","_parseContainerBox","_parseFullBox","_writeData","_writeInt","setInt8","setInt16","setInt32","floor","setUint32","_writeUint","setUint8","setUint16","_writeString","_writeTerminatedString","_writeTemplate","pre","_writeUTF8String","entry_count","nbCompatibleBrands","language","DataSize","sample_count","reference_count","reference","reference_type","referenced_size","sap","starts_with_SAP","SAP_type","SAP_delta_time","subsegment_count","subsegment","ranges_count","range","subsample_count","subsample","reserved","length_size_of_traf_num","length_size_of_trun_num","length_size_of_sample_num","number_of_entry","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","node","hit","isStale","now","Date","unshiftNode","maxAge","diff","walker","tail","prev","removeNode","Entry","[object Object]","forEachStep","thisp","max","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","mL","allowStale","mA","lengthCalculator","lC","itemCount","next","toArray","k","Map","filter","h","has","item","expiresAt","g","Stream","cea708Parser","captionPackets_","ccStreams_","Cea608Stream","cc","trigger","newCaptionPackets","latestDts_","ignoreNextEqualDts_","numSameDts_","elem","idx","presortIndex","sort","b","packet","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","code","ROWS","createDisplayBuffer","BOTTOM_ROW","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","callbacks","destination","flushSource","inspectMp4","textifyMp4","parseMp4Date","seconds","parseSampleFlags","isLeading","dependsOn","isDependedOn","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","nalParse","avc1","dataReferenceIndex","width","height","horizresolution","vertresolution","frameCount","depth","config","avcC","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","lengthSizeMinusOne","sps","pps","numOfSequenceParameterSets","btrt","bufferSizeDB","maxBitrate","avgBitrate","esds","esId","streamPriority","decoderConfig","objectProfileIndication","streamType","bufferSize","decoderConfigDescriptor","tag","audioObjectType","samplingFrequencyIndex","channelConfiguration","ftyp","majorBrand","minorVersion","compatibleBrands","dinf","dref","dataReferences","escape","creationTime","modificationTime","mdia","mfhd","sequenceNumber","minf","mp4a","channelcount","samplesize","samplerate","streamDescriptor","moof","moov","mvex","mvhd","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","sdtp","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","smhd","balance","stbl","stco","chunkOffsets","entryCount","stsc","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","stsd","sampleDescriptions","stsz","sampleSize","entries","stts","timeToSamples","sampleCount","sampleDelta","styp","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","baseDataOffset","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","trex","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","dataOffset","url ","vmhd","graphicsmode","opcolor","Uint16Array","ab","ArrayBuffer","z","inspectedMp4","indent","prefix","byte","match","textify","parseHdlr","parseSidx","Node","pushNode","forEachReverse","getReverse","mapReverse","initial","acc","reduceReverse","toArrayReverse","from","to","sliceReverse","iterator","mixin","_callbacks","removeEventListener","cb","_timer","timeout","_timeout","_responseTimeout","option","deadline","retry","_retryCallback","ERROR_CODES","override","then","resolve","reject","_fullfilledPromise","Promise","catch","use","ok","_okCallback","getHeader","unset","abort","base64Encoder","redirects","_maxRedirects","maxResponseSize","_maxResponseSize","toJSON","isObj","sortQuery","_sort","queryArr","substring","_appendQueryString","reason","errno","utils","ct","params","links","link","parseLinks","statusType","info","redirect","clientError","serverError","created","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","unprocessableEntity","parts","cleanHeader","changesOrigin","host","authorization","cookie","_defaults","def","server_detection","client_default","Flatted","Primitive","primitive","reviver","input","Primitives","primitives","$","tmp","revive","parsed","output","add","Set","","replacer","space","firstRun","known","after","logger_blendServerDetected","exists","log","level","description","color","sanitizedValue","logger","debug","Cue","VTTCue","TextTrackCue","isFirefox","navigator","userAgent","mergeUint8Arrays","arrays","merged","client_BlendClient","events_default","element","streamUrl","super","textTracks","textCache","lru_cache_default","videoQueue","resetInProgress","reconnectAttempt","reconnectAttemptResetTimeout","clientLogger","nextBufferedSegmentInterval","videoLogger","mediaSourceLogger","videoBufferLogger","webSocketLogger","setupElementLogging","ready","openWebSocket","setupMediaSource","mediaError","MEDIA_ERR_DECODE","skipToNextBufferedSegment","videoBuffer","buffered","segmentStart","start","currentTime","addEnsureRecoveryOnWaiting","ensureRecovery","clearInterval","setInterval","play","elementIsPlaying","paused","ended","recoveryTimeout","recoveryStart","handlePlay","round","removeAttribute","load","closeWebSocket","close","address","browser_default","heartbeatInterval","captionParser","caption_parser_default","trackIds","binaryType","onclose","wasClean","onmessage","typedArray","checkedTimescales","probe_default","iso_boxer","caption","addCaption","updating","appendBuffer","onerror","onopen","cacheKey","textTrack","addTextTrack","cue","align","addCue","onError","onClose","mediaSource","MediaSource","setupMediaSourceLogging","src","URL","createObjectURL","handle","addSourceBuffer","setupVideoBufferLogging","async","thumbnail_url","windowLogger","makeBlendLogger","stack","urlRegex","urlMatch","href","blendServerDetectedPromise","thumbnailUrl","getBlendThumbnailUrl","document","querySelector","BlendClient","initialize"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","\"use strict\";\n\n/**\n * Root reference for iframes.\n */\nlet root;\n\nif (typeof window !== 'undefined') {\n  // Browser window\n  root = window;\n} else if (typeof self === 'undefined') {\n  // Other environments\n  console.warn('Using browser-only version of superagent in non-browser environment');\n  root = void 0;\n} else {\n  // Web Worker\n  root = self;\n}\n\nconst Emitter = require('component-emitter');\n\nconst RequestBase = require('./request-base');\n\nconst isObject = require('./is-object');\n\nconst ResponseBase = require('./response-base');\n\nconst Agent = require('./agent-base');\n/**\n * Noop.\n */\n\n\nfunction noop() {}\n/**\n * Expose `request`.\n */\n\n\nmodule.exports = function (method, url) {\n  // callback\n  if (typeof url === 'function') {\n    return new exports.Request('GET', method).end(url);\n  } // url first\n\n\n  if (arguments.length === 1) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n};\n\nexports = module.exports;\nconst request = exports;\nexports.Request = Request;\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = () => {\n  if (root.XMLHttpRequest && (!root.location || root.location.protocol !== 'file:' || !root.ActiveXObject)) {\n    return new XMLHttpRequest();\n  }\n\n  try {\n    return new ActiveXObject('Microsoft.XMLHTTP');\n  } catch (err) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.6.0');\n  } catch (err) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP.3.0');\n  } catch (err) {}\n\n  try {\n    return new ActiveXObject('Msxml2.XMLHTTP');\n  } catch (err) {}\n\n  throw new Error('Browser-only version of superagent could not find XHR');\n};\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\n\nconst trim = ''.trim ? s => s.trim() : s => s.replace(/(^\\s*|\\s*$)/g, '');\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  const pairs = [];\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n\n  return pairs.join('&');\n}\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val !== null) {\n    if (Array.isArray(val)) {\n      val.forEach(v => {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for (const subkey in val) {\n        if (Object.prototype.hasOwnProperty.call(val, subkey)) pushEncodedKeyValuePair(pairs, `${key}[${subkey}]`, val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n/**\n * Expose serialization method.\n */\n\n\nrequest.serializeObject = serialize;\n/**\n * Parse the given x-www-form-urlencoded `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseString(str) {\n  const obj = {};\n  const pairs = str.split('&');\n  let pair;\n  let pos;\n\n  for (let i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n\n    if (pos === -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] = decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n/**\n * Expose parser.\n */\n\n\nrequest.parseString = parseString;\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'text/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  form: 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\nrequest.serialize = {\n  'application/x-www-form-urlencoded': serialize,\n  'application/json': JSON.stringify\n};\n/**\n * Default parsers.\n *\n *     superagent.parse['application/xml'] = function(str){\n *       return { object parsed from str };\n *     };\n *\n */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  const lines = str.split(/\\r?\\n/);\n  const fields = {};\n  let index;\n  let line;\n  let field;\n  let val;\n\n  for (let i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n\n    if (index === -1) {\n      // could be empty line, just skip it\n      continue;\n    }\n\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\n\nfunction isJSON(mime) {\n  // should match /json or +json\n  // but not /json-seq\n  return /[/+]json($|[^-\\w])/.test(mime);\n}\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr; // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\n  this.text = this.req.method !== 'HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text') || typeof this.xhr.responseType === 'undefined' ? this.xhr.responseText : null;\n  this.statusText = this.req.xhr.statusText;\n  let status = this.xhr.status; // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n  if (status === 1223) {\n    status = 204;\n  }\n\n  this._setStatusProperties(status);\n\n  this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  this.header = this.headers; // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\n  this._setHeaderProperties(this.header);\n\n  if (this.text === null && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method === 'HEAD' ? null : this._parseBody(this.text ? this.text : this.xhr.response);\n  }\n} // eslint-disable-next-line new-cap\n\n\nResponseBase(Response.prototype);\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function (str) {\n  let parse = request.parse[this.type];\n\n  if (this.req._parser) {\n    return this.req._parser(this, str);\n  }\n\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n\n  return parse && str && (str.length > 0 || str instanceof Object) ? parse(str) : null;\n};\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\n\nResponse.prototype.toError = function () {\n  const req = this.req;\n  const method = req.method;\n  const url = req.url;\n  const msg = `cannot ${method} ${url} (${this.status})`;\n  const err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n  return err;\n};\n/**\n * Expose `Response`.\n */\n\n\nrequest.Response = Response;\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  const self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n\n  this._header = {}; // coerces header names to lowercase\n\n  this.on('end', () => {\n    let err = null;\n    let res = null;\n\n    try {\n      res = new Response(self);\n    } catch (err2) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = err2; // issue #675: return the raw response if the response parsing fails\n\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType === 'undefined' ? self.xhr.responseText : self.xhr.response; // issue #876: return the http status code if the response parsing fails\n\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n    let new_err;\n\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n      }\n    } catch (err2) {\n      new_err = err2; // ok() callback can throw\n    } // #1000 don't catch errors from the callback to avoid double calling it\n\n\n    if (new_err) {\n      new_err.original = err;\n      new_err.response = res;\n      new_err.status = res.status;\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n// eslint-disable-next-line new-cap\n\n\nEmitter(Request.prototype); // eslint-disable-next-line new-cap\n\nRequestBase(Request.prototype);\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function (type) {\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.accept = function (type) {\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} [pass] optional in case of using 'bearer' as type\n * @param {Object} options with 'type' property 'auto', 'basic' or 'bearer' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.auth = function (user, pass, options) {\n  if (arguments.length === 1) pass = '';\n\n  if (typeof pass === 'object' && pass !== null) {\n    // pass is optional and can be replaced with options\n    options = pass;\n    pass = '';\n  }\n\n  if (!options) {\n    options = {\n      type: typeof btoa === 'function' ? 'basic' : 'auto'\n    };\n  }\n\n  const encoder = string => {\n    if (typeof btoa === 'function') {\n      return btoa(string);\n    }\n\n    throw new Error('Cannot use basic auth, btoa is not a function');\n  };\n\n  return this._auth(user, pass, options, encoder);\n};\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.query = function (val) {\n  if (typeof val !== 'string') val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.attach = function (field, file, options) {\n  if (file) {\n    if (this._data) {\n      throw new Error(\"superagent can't mix .send() and .attach()\");\n    }\n\n    this._getFormData().append(field, file, options || file.name);\n  }\n\n  return this;\n};\n\nRequest.prototype._getFormData = function () {\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n\n  return this._formData;\n};\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\n\nRequest.prototype.callback = function (err, res) {\n  if (this._shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  const fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\n\nRequest.prototype.crossDomainError = function () {\n  const err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n  this.callback(err);\n}; // This only warns, because the request is still likely to work\n\n\nRequest.prototype.agent = function () {\n  console.warn('This is not supported in browser version of superagent');\n  return this;\n};\n\nRequest.prototype.buffer = Request.prototype.ca;\nRequest.prototype.ca = Request.prototype.agent; // This throws, because it can't send/receive data as expected\n\nRequest.prototype.write = () => {\n  throw new Error('Streaming is not supported in browser version of superagent');\n};\n\nRequest.prototype.pipe = Request.prototype.write;\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj host object\n * @return {Boolean} is a host object\n * @api private\n */\n\nRequest.prototype._isHost = function (obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && typeof obj === 'object' && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n};\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequest.prototype.end = function (fn) {\n  if (this._endCalled) {\n    console.warn('Warning: .end() was called twice. This is not supported in superagent');\n  }\n\n  this._endCalled = true; // store callback\n\n  this._callback = fn || noop; // querystring\n\n  this._finalizeQueryString();\n\n  this._end();\n};\n\nRequest.prototype._setUploadTimeout = function () {\n  const self = this; // upload timeout it's wokrs only if deadline timeout is off\n\n  if (this._uploadTimeout && !this._uploadTimeoutTimer) {\n    this._uploadTimeoutTimer = setTimeout(() => {\n      self._timeoutError('Upload timeout of ', self._uploadTimeout, 'ETIMEDOUT');\n    }, this._uploadTimeout);\n  }\n}; // eslint-disable-next-line complexity\n\n\nRequest.prototype._end = function () {\n  if (this._aborted) return this.callback(new Error('The request has been aborted even before .end() was called'));\n  const self = this;\n  this.xhr = request.getXHR();\n  const xhr = this.xhr;\n  let data = this._formData || this._data;\n\n  this._setTimeouts(); // state change\n\n\n  xhr.onreadystatechange = () => {\n    const readyState = xhr.readyState;\n\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n\n    if (readyState !== 4) {\n      return;\n    } // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n\n\n    let status;\n\n    try {\n      status = xhr.status;\n    } catch (err) {\n      status = 0;\n    }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n\n    self.emit('end');\n  }; // progress\n\n\n  const handleProgress = (direction, e) => {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n\n      if (e.percent === 100) {\n        clearTimeout(self._uploadTimeoutTimer);\n      }\n    }\n\n    e.direction = direction;\n    self.emit('progress', e);\n  };\n\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.addEventListener('progress', handleProgress.bind(null, 'download'));\n\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', handleProgress.bind(null, 'upload'));\n      }\n    } catch (err) {// Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  if (xhr.upload) {\n    this._setUploadTimeout();\n  } // initiate request\n\n\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  } // CORS\n\n\n  if (this._withCredentials) xhr.withCredentials = true; // body\n\n  if (!this._formData && this.method !== 'GET' && this.method !== 'HEAD' && typeof data !== 'string' && !this._isHost(data)) {\n    // serialize stuff\n    const contentType = this._header['content-type'];\n    let serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n\n    if (serialize) data = serialize(data);\n  } // set header fields\n\n\n  for (const field in this.header) {\n    if (this.header[field] === null) continue;\n    if (Object.prototype.hasOwnProperty.call(this.header, field)) xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  } // send stuff\n\n\n  this.emit('request', this); // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n\n  xhr.send(typeof data === 'undefined' ? null : data);\n};\n\nrequest.agent = () => new Agent();\n\n['GET', 'POST', 'OPTIONS', 'PATCH', 'PUT', 'DELETE'].forEach(method => {\n  Agent.prototype[method.toLowerCase()] = function (url, fn) {\n    const req = new request.Request(method, url);\n\n    this._setDefaults(req);\n\n    if (fn) {\n      req.end(fn);\n    }\n\n    return req;\n  };\n});\nAgent.prototype.del = Agent.prototype.delete;\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = (url, data, fn) => {\n  const req = request('GET', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.head = (url, data, fn) => {\n  const req = request('HEAD', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.options = (url, data, fn) => {\n  const req = request('OPTIONS', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nfunction del(url, data, fn) {\n  const req = request('DELETE', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n}\n\nrequest.del = del;\nrequest.delete = del;\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = (url, data, fn) => {\n  const req = request('PATCH', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.post = (url, data, fn) => {\n  const req = request('POST', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\n\nrequest.put = (url, data, fn) => {\n  const req = request('PUT', url);\n\n  if (typeof data === 'function') {\n    fn = data;\n    data = null;\n  }\n\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","\"use strict\";\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nmodule.exports = isObject;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","// https://github.com/maxogden/websocket-stream/blob/48dc3ddf943e5ada668c31ccd94e9186f02fafbd/ws-fallback.js\n\nvar ws = null\n\nif (typeof WebSocket !== 'undefined') {\n  ws = WebSocket\n} else if (typeof MozWebSocket !== 'undefined') {\n  ws = MozWebSocket\n} else if (typeof global !== 'undefined') {\n  ws = global.WebSocket || global.MozWebSocket\n} else if (typeof window !== 'undefined') {\n  ws = window.WebSocket || window.MozWebSocket\n} else if (typeof self !== 'undefined') {\n  ws = self.WebSocket || self.MozWebSocket\n}\n\nmodule.exports = ws\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","/*! codem-isoboxer v0.3.7 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */\nvar ISOBoxer = {};\n\nISOBoxer.parseBuffer = function(arrayBuffer) {\n  return new ISOFile(arrayBuffer).parse();\n};\n\nISOBoxer.addBoxProcessor = function(type, parser) {\n  if (typeof type !== 'string' || typeof parser !== 'function') {\n    return;\n  }\n  ISOBox.prototype._boxProcessors[type] = parser;\n};\n\nISOBoxer.createFile = function() {\n  return new ISOFile();\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createBox = function(type, parent, pos) {\n  var newBox = ISOBox.create(type);\n  if (parent) {\n    parent.append(newBox, pos);\n  }\n  return newBox;\n};\n\n// See ISOBoxer.append() for 'pos' parameter syntax\nISOBoxer.createFullBox = function(type, parent, pos) {\n  var newBox = ISOBoxer.createBox(type, parent, pos);\n  newBox.version = 0;\n  newBox.flags = 0;\n  return newBox;\n};\n\nISOBoxer.Utils = {};\nISOBoxer.Utils.dataViewToString = function(dataView, encoding) {\n  var impliedEncoding = encoding || 'utf-8';\n  if (typeof TextDecoder !== 'undefined') {\n    return new TextDecoder(impliedEncoding).decode(dataView);\n  }\n  var a = [];\n  var i = 0;\n\n  if (impliedEncoding === 'utf-8') {\n    /* The following algorithm is essentially a rewrite of the UTF8.decode at\n    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/\n    */\n\n    while (i < dataView.byteLength) {\n      var c = dataView.getUint8(i++);\n      if (c < 0x80) {\n        // 1-byte character (7 bits)\n      } else if (c < 0xe0) {\n        // 2-byte character (11 bits)\n        c = (c & 0x1f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else if (c < 0xf0) {\n        // 3-byte character (16 bits)\n        c = (c & 0xf) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      } else {\n        // 4-byte character (21 bits)\n        c = (c & 0x7) << 18;\n        c |= (dataView.getUint8(i++) & 0x3f) << 12;\n        c |= (dataView.getUint8(i++) & 0x3f) << 6;\n        c |= (dataView.getUint8(i++) & 0x3f);\n      }\n      a.push(String.fromCharCode(c));\n    }\n  } else { // Just map byte-by-byte (probably wrong)\n    while (i < dataView.byteLength) {\n      a.push(String.fromCharCode(dataView.getUint8(i++)));\n    }\n  }\n  return a.join('');\n};\n\nISOBoxer.Utils.utf8ToByteArray = function(string) {\n  // Only UTF-8 encoding is supported by TextEncoder\n  var u, i;\n  if (typeof TextEncoder !== 'undefined') {\n    u = new TextEncoder().encode(string);\n  } else {\n    u = [];\n    for (i = 0; i < string.length; ++i) {\n      var c = string.charCodeAt(i);\n      if (c < 0x80) {\n        u.push(c);\n      } else if (c < 0x800) {\n        u.push(0xC0 | (c >> 6));\n        u.push(0x80 | (63 & c));\n      } else if (c < 0x10000) {\n        u.push(0xE0 | (c >> 12));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      } else {\n        u.push(0xF0 | (c >> 18));\n        u.push(0x80 | (63 & (c >> 12)));\n        u.push(0x80 | (63 & (c >> 6)));\n        u.push(0x80 | (63 & c));\n      }\n    }\n  }\n  return u;\n};\n\n// Method to append a box in the list of child boxes\n// The 'pos' parameter can be either:\n//   - (number) a position index at which to insert the new box\n//   - (string) the type of the box after which to insert the new box\n//   - (object) the box after which to insert the new box\nISOBoxer.Utils.appendBox = function(parent, box, pos) {\n  box._offset = parent._cursor.offset;\n  box._root = (parent._root ? parent._root : parent);\n  box._raw = parent._raw;\n  box._parent = parent;\n\n  if (pos === -1) {\n    // The new box is a sub-box of the parent but not added in boxes array,\n    // for example when the new box is set as an entry (see dref and stsd for example)\n    return;\n  }\n\n  if (pos === undefined || pos === null) {\n    parent.boxes.push(box);\n    return;\n  }\n\n  var index = -1,\n      type;\n\n  if (typeof pos === \"number\") {\n    index = pos;\n  } else {\n    if (typeof pos === \"string\") {\n      type = pos;\n    } else if (typeof pos === \"object\" && pos.type) {\n      type = pos.type;\n    } else {\n      parent.boxes.push(box);\n      return;\n    }\n\n    for (var i = 0; i < parent.boxes.length; i++) {\n      if (type === parent.boxes[i].type) {\n        index = i + 1;\n        break;\n      }\n    }\n  }\n  parent.boxes.splice(index, 0, box);\n};\n\nif (typeof exports !== 'undefined') {\n  exports.parseBuffer     = ISOBoxer.parseBuffer;\n  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;\n  exports.createFile      = ISOBoxer.createFile;\n  exports.createBox       = ISOBoxer.createBox;\n  exports.createFullBox   = ISOBoxer.createFullBox;\n  exports.Utils           = ISOBoxer.Utils;\n}\n\nISOBoxer.Cursor = function(initialOffset) {\n  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);\n};\n\nvar ISOFile = function(arrayBuffer) {\n  this._cursor = new ISOBoxer.Cursor();\n  this.boxes = [];\n  if (arrayBuffer) {\n    this._raw = new DataView(arrayBuffer);\n  }\n};\n\nISOFile.prototype.fetch = function(type) {\n  var result = this.fetchAll(type, true);\n  return (result.length ? result[0] : null);\n};\n\nISOFile.prototype.fetchAll = function(type, returnEarly) {\n  var result = [];\n  ISOFile._sweep.call(this, type, result, returnEarly);\n  return result;\n};\n\nISOFile.prototype.parse = function() {\n  this._cursor.offset = 0;\n  this.boxes = [];\n  while (this._cursor.offset < this._raw.byteLength) {\n    var box = ISOBox.parse(this);\n\n    // Box could not be parsed\n    if (typeof box.type === 'undefined') break;\n\n    this.boxes.push(box);\n  }\n  return this;\n};\n\nISOFile._sweep = function(type, result, returnEarly) {\n  if (this.type && this.type == type) result.push(this);\n  for (var box in this.boxes) {\n    if (result.length && returnEarly) return;\n    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);\n  }\n};\n\nISOFile.prototype.write = function() {\n\n  var length = 0,\n      i;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    length += this.boxes[i].getLength(false);\n  }\n\n  var bytes = new Uint8Array(length);\n  this._rawo = new DataView(bytes.buffer);\n  this.bytes = bytes;\n  this._cursor.offset = 0;\n\n  for (i = 0; i < this.boxes.length; i++) {\n    this.boxes[i].write();\n  }\n\n  return bytes.buffer;\n};\n\nISOFile.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\nvar ISOBox = function() {\n  this._cursor = new ISOBoxer.Cursor();\n};\n\nISOBox.parse = function(parent) {\n  var newBox = new ISOBox();\n  newBox._offset = parent._cursor.offset;\n  newBox._root = (parent._root ? parent._root : parent);\n  newBox._raw = parent._raw;\n  newBox._parent = parent;\n  newBox._parseBox();\n  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;\n  return newBox;\n};\n\nISOBox.create = function(type) {\n  var newBox = new ISOBox();\n  newBox.type = type;\n  newBox.boxes = [];\n  return newBox;\n};\n\nISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];\n\nISOBox.prototype._boxProcessors = {};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Generic read/write functions\n\nISOBox.prototype._procField = function (name, type, size) {\n  if (this._parsing) {\n    this[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, this[name]);\n  }\n};\n\nISOBox.prototype._procFieldArray = function (name, length, type, size) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name][i] = this._readField(type, size);\n    }\n  }\n  else {\n    for (i = 0; i < this[name].length; i++) {\n      this._writeField(type, size, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procFullBox = function() {\n  this._procField('version', 'uint', 8);\n  this._procField('flags', 'uint', 24);\n};\n\nISOBox.prototype._procEntries = function(name, length, fn) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push({});\n      fn.call(this, this[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, this[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procSubEntries = function(entry, name, length, fn) {\n  var i;\n  if (this._parsing) {\n    entry[name] = [];\n    for (i = 0; i < length; i++) {\n      entry[name].push({});\n      fn.call(this, entry[name][i]);\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      fn.call(this, entry[name][i]);\n    }\n  }\n};\n\nISOBox.prototype._procEntryField = function (entry, name, type, size) {\n  if (this._parsing) {\n    entry[name] = this._readField(type, size);\n  }\n  else {\n    this._writeField(type, size, entry[name]);\n  }\n};\n\nISOBox.prototype._procSubBoxes = function(name, length) {\n  var i;\n  if (this._parsing) {\n    this[name] = [];\n    for (i = 0; i < length; i++) {\n      this[name].push(ISOBox.parse(this));\n    }\n  }\n  else {\n    for (i = 0; i < length; i++) {\n      if (this._rawo) {\n        this[name][i].write();\n      } else {\n        this.size += this[name][i].getLength();\n      }\n    }\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Read/parse functions\n\nISOBox.prototype._readField = function(type, size) {\n  switch (type) {\n    case 'uint':\n      return this._readUint(size);\n    case 'int':\n      return this._readInt(size);\n    case 'template':\n      return this._readTemplate(size);\n    case 'string':\n      return (size === -1) ? this._readTerminatedString() : this._readString(size);\n    case 'data':\n      return this._readData(size);\n    case 'utf8':\n      return this._readUTF8String();\n    default:\n      return -1;\n  }\n};\n\nISOBox.prototype._readInt = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset;\n  switch(size) {\n  case 8:\n    result = this._raw.getInt8(offset);\n    break;\n  case 16:\n    result = this._raw.getInt16(offset);\n    break;\n  case 32:\n    result = this._raw.getInt32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    var s1 = this._raw.getInt32(offset);\n    var s2 = this._raw.getInt32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readUint = function(size) {\n  var result = null,\n      offset = this._cursor.offset - this._raw.byteOffset,\n      s1, s2;\n  switch(size) {\n  case 8:\n    result = this._raw.getUint8(offset);\n    break;\n  case 16:\n    result = this._raw.getUint16(offset);\n    break;\n  case 24:\n    s1 = this._raw.getUint16(offset);\n    s2 = this._raw.getUint8(offset + 2);\n    result = (s1 << 8) + s2;\n    break;\n  case 32:\n    result = this._raw.getUint32(offset);\n    break;\n  case 64:\n    // Warning: JavaScript cannot handle 64-bit integers natively.\n    // This will give unexpected results for integers >= 2^53\n    s1 = this._raw.getUint32(offset);\n    s2 = this._raw.getUint32(offset + 4);\n    result = (s1 * Math.pow(2,32)) + s2;\n    break;\n  }\n  this._cursor.offset += (size >> 3);\n  return result;\n};\n\nISOBox.prototype._readString = function(length) {\n  var str = '';\n  for (var c = 0; c < length; c++) {\n    var char = this._readUint(8);\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readTemplate = function(size) {\n  var pre = this._readUint(size / 2);\n  var post = this._readUint(size / 2);\n  return pre + (post / Math.pow(2, size / 2));\n};\n\nISOBox.prototype._readTerminatedString = function() {\n  var str = '';\n  while (this._cursor.offset - this._offset < this._raw.byteLength) {\n    var char = this._readUint(8);\n    if (char === 0) break;\n    str += String.fromCharCode(char);\n  }\n  return str;\n};\n\nISOBox.prototype._readData = function(size) {\n  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));\n  if (length > 0) {\n    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);\n\n    this._cursor.offset += length;\n    return data;\n  }\n  else {\n    return null;\n  }\n};\n\nISOBox.prototype._readUTF8String = function() {\n  var length = this._raw.byteLength - (this._cursor.offset - this._offset);\n  var data = null;\n  if (length > 0) {\n    data = new DataView(this._raw.buffer, this._cursor.offset, length);\n    this._cursor.offset += length;\n  }\n \n  return data ? ISOBoxer.Utils.dataViewToString(data) : data;\n};\n\nISOBox.prototype._parseBox = function() {\n  this._parsing = true;\n  this._cursor.offset = this._offset;\n\n  // return immediately if there are not enough bytes to read the header\n  if (this._offset + 8 > this._raw.buffer.byteLength) {\n    this._root._incomplete = true;\n    return;\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  switch(this.size) {\n  case 0:\n    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset + 8));\n    break;\n  case 1:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);\n    }\n    break;\n  default:\n    if (this._offset + this.size > this._raw.buffer.byteLength) {\n      this._incomplete = true;\n      this._root._incomplete = true;\n    } else {\n      this._raw = new DataView(this._raw.buffer, this._offset, this.size);\n    }\n  }\n\n  // additional parsing\n  if (!this._incomplete) {\n    if (this._boxProcessors[this.type]) {\n      this._boxProcessors[this.type].call(this);\n    }\n    if (this._boxContainers.indexOf(this.type) !== -1) {\n      this._parseContainerBox();\n    } else{\n      // Unknown box => read and store box content\n      this._data = this._readData();\n    }\n  }\n};\n\nISOBox.prototype._parseFullBox = function() {\n  this.version = this._readUint(8);\n  this.flags = this._readUint(24);\n};\n\nISOBox.prototype._parseContainerBox = function() {\n  this.boxes = [];\n  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {\n    this.boxes.push(ISOBox.parse(this));\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// Write functions\n\nISOBox.prototype.append = function(box, pos) {\n  ISOBoxer.Utils.appendBox(this, box, pos);\n};\n\nISOBox.prototype.getLength = function() {\n  this._parsing = false;\n  this._rawo = null;\n\n  this.size = 0;\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.size += this.boxes[i].getLength();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  return this.size;\n};\n\nISOBox.prototype.write = function() {\n  this._parsing = false;\n  this._cursor.offset = this._parent._cursor.offset;\n\n  switch(this.size) {\n  case 0:\n    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));\n    break;\n  case 1:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);\n    break;\n  default:\n      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);\n  }\n\n  this._procField('size', 'uint', 32);\n  this._procField('type', 'string', 4);\n\n  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }\n  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }\n\n  if (this._boxProcessors[this.type]) {\n    this._boxProcessors[this.type].call(this);\n  }\n\n  if (this._boxContainers.indexOf(this.type) !== -1) {\n    for (var i = 0; i < this.boxes.length; i++) {\n      this.boxes[i].write();\n    }\n  } \n\n  if (this._data) {\n    this._writeData(this._data);\n  }\n\n  this._parent._cursor.offset += this.size;\n\n  return this.size;\n};\n\nISOBox.prototype._writeInt = function(size, value) {\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset;\n    switch(size) {\n    case 8:\n      this._rawo.setInt8(offset, value);\n      break;\n    case 16:\n      this._rawo.setInt16(offset, value);\n      break;\n    case 32:\n      this._rawo.setInt32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      var s1 = Math.floor(value / Math.pow(2,32));\n      var s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeUint = function(size, value) {\n\n  if (this._rawo) {\n    var offset = this._cursor.offset - this._rawo.byteOffset,\n        s1, s2;\n    switch(size) {\n    case 8:\n      this._rawo.setUint8(offset, value);\n      break;\n    case 16:\n      this._rawo.setUint16(offset, value);\n      break;\n    case 24:\n      s1 = (value & 0xFFFF00) >> 8;\n      s2 = (value & 0x0000FF);\n      this._rawo.setUint16(offset, s1);\n      this._rawo.setUint8(offset + 2, s2);\n      break;\n    case 32:\n      this._rawo.setUint32(offset, value);\n      break;\n    case 64:\n      // Warning: JavaScript cannot handle 64-bit integers natively.\n      // This will give unexpected results for integers >= 2^53\n      s1 = Math.floor(value / Math.pow(2,32));\n      s2 = value - (s1 * Math.pow(2,32));\n      this._rawo.setUint32(offset, s1);\n      this._rawo.setUint32(offset + 4, s2);\n      break;\n    }\n    this._cursor.offset += (size >> 3);\n  } else {\n    this.size += (size >> 3);\n  }\n};\n\nISOBox.prototype._writeString = function(size, str) {\n  for (var c = 0; c < size; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n};\n\nISOBox.prototype._writeTerminatedString = function(str) {\n  if (str.length === 0) {\n    return;\n  }\n  for (var c = 0; c < str.length; c++) {\n    this._writeUint(8, str.charCodeAt(c));\n  }\n  this._writeUint(8, 0);\n};\n\nISOBox.prototype._writeTemplate = function(size, value) {\n  var pre = Math.floor(value);\n  var post = (value - pre) * Math.pow(2, size / 2);\n  this._writeUint(size / 2, pre);\n  this._writeUint(size / 2, post);\n};\n\nISOBox.prototype._writeData = function(data) {\n  var i;\n  //data to copy\n  if (data) {\n    if (this._rawo) {\n      //Array and Uint8Array has also to be managed\n      if (data instanceof Array) {\n        var offset = this._cursor.offset - this._rawo.byteOffset;\n        for (var i = 0; i < data.length; i++) {\n          this._rawo.setInt8(offset + i, data[i]);\n        }\n        this._cursor.offset += data.length;\n      } \n\n      if (data instanceof Uint8Array) {\n        this._root.bytes.set(data, this._cursor.offset);\n        this._cursor.offset += data.length;\n      }\n\n    } else {\n      //nothing to copy only size to compute\n      this.size += data.length;\n    }\n  }\n};\n\nISOBox.prototype._writeUTF8String = function(string) {\n  var u = ISOBoxer.Utils.utf8ToByteArray(string);\n  if (this._rawo) {\n    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);\n    for (var i = 0; i < u.length; i++) {\n      dataView.setUint8(i, u[i]);\n    }\n  } else {\n    this.size += u.length;\n  }\n};\n\nISOBox.prototype._writeField = function(type, size, value) {\n  switch (type) {\n  case 'uint':\n    this._writeUint(size, value);\n    break;\n  case 'int':\n    this._writeInt(size, value);\n    break;\n  case 'template':\n    this._writeTemplate(size, value);\n    break;\n  case 'string':\n      if (size == -1) {\n        this._writeTerminatedString(value);\n      } else {\n        this._writeString(size, value);\n      }\n      break;\n  case 'data':\n    this._writeData(value);\n    break;\n  case 'utf8':\n    this._writeUTF8String(value);\n    break;\n  default:\n    break;\n  }\n};\n\n// ISO/IEC 14496-15:2014 - avc1/2/3/4, hev1, hvc1, encv\nISOBox.prototype._boxProcessors['avc1'] =\nISOBox.prototype._boxProcessors['avc2'] =\nISOBox.prototype._boxProcessors['avc3'] =\nISOBox.prototype._boxProcessors['avc4'] =\nISOBox.prototype._boxProcessors['hvc1'] =\nISOBox.prototype._boxProcessors['hev1'] =\nISOBox.prototype._boxProcessors['encv'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // VisualSampleEntry fields\n  this._procField('pre_defined1',         'uint',     16);\n  this._procField('reserved2',            'uint',     16);\n  this._procFieldArray('pre_defined2', 3, 'uint',     32);\n  this._procField('width',                'uint',     16);\n  this._procField('height',               'uint',     16);\n  this._procField('horizresolution',      'template', 32);\n  this._procField('vertresolution',       'template', 32);\n  this._procField('reserved3',            'uint',     32);\n  this._procField('frame_count',          'uint',     16);\n  this._procFieldArray('compressorname', 32,'uint',    8);\n  this._procField('depth',                'uint',     16);\n  this._procField('pre_defined3',         'int',      16);\n  // Codec-specific fields\n  this._procField('config', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['dref'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box\nISOBox.prototype._boxProcessors['elst'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'media_rate_integer',   'int',  16);\n    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);\n  });\n};\n\n// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box\nISOBox.prototype._boxProcessors['emsg'] = function() {\n  this._procFullBox();\n  if (this.version == 1) {\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time',        'uint',   64);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n  } else {\n    this._procField('scheme_id_uri',            'string', -1);\n    this._procField('value',                    'string', -1);\n    this._procField('timescale',                'uint',   32);\n    this._procField('presentation_time_delta',  'uint',   32);\n    this._procField('event_duration',           'uint',   32);\n    this._procField('id',                       'uint',   32);\n  }\n  this._procField('message_data',             'data',   -1);\n};\n// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box\nISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box\nISOBox.prototype._boxProcessors['frma'] = function() {\n  this._procField('data_format', 'uint', 32);\n};\n// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box\nISOBox.prototype._boxProcessors['ftyp'] =\nISOBox.prototype._boxProcessors['styp'] = function() {\n  this._procField('major_brand', 'string', 4);\n  this._procField('minor_version', 'uint', 32);\n  var nbCompatibleBrands = -1;\n  if (this._parsing) {\n    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;\n  }\n  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box\nISOBox.prototype._boxProcessors['hdlr'] = function() {\n  this._procFullBox();\n  this._procField('pre_defined',      'uint',   32);\n  this._procField('handler_type',     'string', 4);\n  this._procFieldArray('reserved', 3, 'uint', 32);\n  this._procField('name',             'string', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box\nISOBox.prototype._boxProcessors['mdat'] = function() {\n  this._procField('data', 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box\nISOBox.prototype._boxProcessors['mdhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint', 32);\n  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);\n  if (!this._parsing && typeof this.language === 'string') {\n    // In case of writing and language has been set as a string, then convert it into char codes array\n    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |\n                    ((this.language.charCodeAt(1) - 0x60) << 5) |\n                    ((this.language.charCodeAt(2) - 0x60));\n  }\n  this._procField('language',           'uint', 16);\n  if (this._parsing) {\n    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,\n                                        ((this.language >> 5) & 0x1F) + 0x60,\n                                        (this.language & 0x1F) + 0x60);\n  }\n  this._procField('pre_defined',        'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box\nISOBox.prototype._boxProcessors['mehd'] = function() {\n  this._procFullBox();\n  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box\nISOBox.prototype._boxProcessors['mfhd'] = function() {\n  this._procFullBox();\n  this._procField('sequence_number', 'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box\nISOBox.prototype._boxProcessors['mfro'] = function() {\n  this._procFullBox();\n  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal \"size\" attribute of a box\n};\n\n\n// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)\nISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {\n  // SampleEntry fields\n  this._procFieldArray('reserved1', 6,    'uint', 8);\n  this._procField('data_reference_index', 'uint', 16);\n  // AudioSampleEntry fields\n  this._procFieldArray('reserved2', 2,    'uint', 32);\n  this._procField('channelcount',         'uint', 16);\n  this._procField('samplesize',           'uint', 16);\n  this._procField('pre_defined',          'uint', 16);\n  this._procField('reserved3',            'uint', 16);\n  this._procField('samplerate',           'template', 32);\n  // ESDescriptor fields\n  this._procField('esds',                 'data', -1);\n};\n\n// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box\nISOBox.prototype._boxProcessors['mvhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('timescale',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('rate',               'template', 32);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved1',          'uint',  16);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procFieldArray('pre_defined', 6,'uint',   32);\n  this._procField('next_track_ID',      'uint',     32);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.\nISOBox.prototype._boxProcessors['payl'] = function() {\n  this._procField('cue_text', 'utf8');\n};\n\n//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box\nISOBox.prototype._boxProcessors['pssh'] = function() {\n  this._procFullBox();\n  \n  this._procFieldArray('SystemID', 16, 'uint', 8);\n  this._procField('DataSize', 'uint', 32);\n  this._procFieldArray('Data', this.DataSize, 'uint', 8);\n};\n// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box\nISOBox.prototype._boxProcessors['schm'] = function() {\n    this._procFullBox();\n    \n    this._procField('scheme_type', 'uint', 32);\n    this._procField('scheme_version', 'uint', 32);\n\n    if (this.flags & 0x000001) {\n        this._procField('scheme_uri', 'string', -1);\n    }\n};\n// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box \nISOBox.prototype._boxProcessors['sdtp'] = function() {\n  this._procFullBox();\n\n  var sample_count = -1;\n  if (this._parsing) {\n    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));\n  }\n\n  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box\nISOBox.prototype._boxProcessors['sidx'] = function() {\n  this._procFullBox();\n  this._procField('reference_ID', 'uint', 32);\n  this._procField('timescale', 'uint', 32);\n  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);\n  this._procField('reserved', 'uint', 16);\n  this._procField('reference_count', 'uint', 16);\n  this._procEntries('references', this.reference_count, function(entry) {\n    if (!this._parsing) {\n      entry.reference  = (entry.reference_type  & 0x00000001) << 31;\n      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);\n      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;\n      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;\n      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);\n    }\n    this._procEntryField(entry, 'reference', 'uint', 32);\n    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);\n    this._procEntryField(entry, 'sap', 'uint', 32);\n    if (this._parsing) {\n      entry.reference_type = (entry.reference >> 31) & 0x00000001;\n      entry.referenced_size = entry.reference & 0x7FFFFFFF;\n      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;\n      entry.SAP_type = (entry.sap >> 28) & 0x00000007;\n      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);\n    }\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box\nISOBox.prototype._boxProcessors['smhd'] = function() {\n  this._procFullBox();\n  this._procField('balance',  'uint', 16);\n  this._procField('reserved', 'uint', 16);\n};\n\n// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box\nISOBox.prototype._boxProcessors['ssix'] = function() {\n  this._procFullBox();\n  this._procField('subsegment_count', 'uint', 32);\n  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {\n    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);\n    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {\n      this._procEntryField(range, 'level', 'uint', 8);\n      this._procEntryField(range, 'range_size', 'uint', 24);\n    });\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box\nISOBox.prototype._boxProcessors['stsd'] = function() {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procSubBoxes('entries', this.entry_count);\n};\n\n// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box\nISOBox.prototype._boxProcessors['subs'] = function () {\n  this._procFullBox();\n  this._procField('entry_count', 'uint', 32);\n  this._procEntries('entries', this.entry_count, function(entry) {\n    this._procEntryField(entry, 'sample_delta', 'uint', 32);\n    this._procEntryField(entry, 'subsample_count', 'uint', 16);\n    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {\n      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);\n      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);\n      this._procEntryField(subsample, 'discardable', 'uint', 8);\n      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);\n    });\n  });\n};\n\n//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box\nISOBox.prototype._boxProcessors['tenc'] = function() {\n    this._procFullBox();\n\n    this._procField('default_IsEncrypted', 'uint', 24);\n    this._procField('default_IV_size', 'uint', 8);\n    this._procFieldArray('default_KID', 16,    'uint', 8);\n };\n\n// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time\nISOBox.prototype._boxProcessors['tfdt'] = function() {\n  this._procFullBox();\n  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box\nISOBox.prototype._boxProcessors['tfhd'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);\n  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);\n  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);\n  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);\n  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box\nISOBox.prototype._boxProcessors['tfra'] = function() {\n  this._procFullBox();\n  this._procField('track_ID', 'uint', 32);\n  if (!this._parsing) {\n    this.reserved = 0;\n    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;\n    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;\n    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);\n  }\n  this._procField('reserved', 'uint', 32);\n  if (this._parsing) {\n    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;\n    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;\n    this.length_size_of_sample_num = (this.reserved & 0x00000003);\n  }\n  this._procField('number_of_entry', 'uint', 32);\n  this._procEntries('entries', this.number_of_entry, function(entry) {\n    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);\n    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);\n    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);\n    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box\nISOBox.prototype._boxProcessors['tkhd'] = function() {\n  this._procFullBox();\n  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);\n  this._procField('track_ID',           'uint',     32);\n  this._procField('reserved1',          'uint',     32);\n  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);\n  this._procFieldArray('reserved2', 2,  'uint',     32);\n  this._procField('layer',              'uint',     16);\n  this._procField('alternate_group',    'uint',     16);\n  this._procField('volume',             'template', 16);\n  this._procField('reserved3',          'uint',     16);\n  this._procFieldArray('matrix', 9,     'template', 32);\n  this._procField('width',              'template', 32);\n  this._procField('height',             'template', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box\nISOBox.prototype._boxProcessors['trex'] = function() {\n  this._procFullBox();\n  this._procField('track_ID',                         'uint', 32);\n  this._procField('default_sample_description_index', 'uint', 32);\n  this._procField('default_sample_duration',          'uint', 32);\n  this._procField('default_sample_size',              'uint', 32);\n  this._procField('default_sample_flags',             'uint', 32);\n};\n\n// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box\n// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.\n// These defaults are not set explicitly here, but are left to resolve for the user.\nISOBox.prototype._boxProcessors['trun'] = function() {\n  this._procFullBox();\n  this._procField('sample_count', 'uint', 32);\n  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);\n  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);\n  this._procEntries('samples', this.sample_count, function(sample) {\n    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);\n    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);\n    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);\n    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);\n  });\n};\n\n// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box\nISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {\n  this._procFullBox();\n  if (this.type === 'urn ') {\n    this._procField('name', 'string', -1);\n  }\n  this._procField('location', 'string', -1);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Source Label Box\nISOBox.prototype._boxProcessors['vlab'] = function() {\n  this._procField('source_label', 'utf8');\n};\n\n// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box\nISOBox.prototype._boxProcessors['vmhd'] = function() {\n  this._procFullBox();\n  this._procField('graphicsmode', 'uint', 16);\n  this._procFieldArray('opcolor', 3, 'uint', 16);\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Configuration Box\nISOBox.prototype._boxProcessors['vttC'] = function() {\n  this._procField('config', 'utf8');\n};\n\n// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box\nISOBox.prototype._boxProcessors['vtte'] = function() {\n  // Nothing should happen here.\n};\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","var toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","\"use strict\";\n\n/**\n * Module of mixed-in functions shared between node and client code\n */\nconst isObject = require('./is-object');\n/**\n * Expose `RequestBase`.\n */\n\n\nmodule.exports = RequestBase;\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\n\nfunction mixin(obj) {\n  for (const key in RequestBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(RequestBase.prototype, key)) obj[key] = RequestBase.prototype[key];\n  }\n\n  return obj;\n}\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.clearTimeout = function () {\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  clearTimeout(this._uploadTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  delete this._uploadTimeoutTimer;\n  return this;\n};\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\n\nRequestBase.prototype.parse = function (fn) {\n  this._parser = fn;\n  return this;\n};\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.responseType = function (val) {\n  this._responseType = val;\n  return this;\n};\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\n\nRequestBase.prototype.serialize = function (fn) {\n  this._serializer = fn;\n  return this;\n};\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n * - upload is the time  since last bit of data was sent or received. This timeout works only if deadline timeout is off\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.timeout = function (options) {\n  if (!options || typeof options !== 'object') {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    this._uploadTimeout = 0;\n    return this;\n  }\n\n  for (const option in options) {\n    if (Object.prototype.hasOwnProperty.call(options, option)) {\n      switch (option) {\n        case 'deadline':\n          this._timeout = options.deadline;\n          break;\n\n        case 'response':\n          this._responseTimeout = options.response;\n          break;\n\n        case 'upload':\n          this._uploadTimeout = options.upload;\n          break;\n\n        default:\n          console.warn('Unknown timeout option', option);\n      }\n    }\n  }\n\n  return this;\n};\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @param {Function} [fn]\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.retry = function (count, fn) {\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  this._retryCallback = fn;\n  return this;\n};\n\nconst ERROR_CODES = ['ECONNRESET', 'ETIMEDOUT', 'EADDRINFO', 'ESOCKETTIMEDOUT'];\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err an error\n * @param {Response} [res] response\n * @returns {Boolean} if segment should be retried\n */\n\nRequestBase.prototype._shouldRetry = function (err, res) {\n  if (!this._maxRetries || this._retries++ >= this._maxRetries) {\n    return false;\n  }\n\n  if (this._retryCallback) {\n    try {\n      const override = this._retryCallback(err, res);\n\n      if (override === true) return true;\n      if (override === false) return false; // undefined falls back to defaults\n    } catch (err2) {\n      console.error(err2);\n    }\n  }\n\n  if (res && res.status && res.status >= 500 && res.status !== 501) return true;\n\n  if (err) {\n    if (err.code && ERROR_CODES.indexOf(err.code) !== -1) return true; // Superagent timeout\n\n    if (err.timeout && err.code === 'ECONNABORTED') return true;\n    if (err.crossDomain) return true;\n  }\n\n  return false;\n};\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\n\nRequestBase.prototype._retry = function () {\n  this.clearTimeout(); // node\n\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n  return this._end();\n};\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\n\nRequestBase.prototype.then = function (resolve, reject) {\n  if (!this._fullfilledPromise) {\n    const self = this;\n\n    if (this._endCalled) {\n      console.warn('Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises');\n    }\n\n    this._fullfilledPromise = new Promise((resolve, reject) => {\n      self.on('abort', () => {\n        const err = new Error('Aborted');\n        err.code = 'ABORTED';\n        err.status = this.status;\n        err.method = this.method;\n        err.url = this.url;\n        reject(err);\n      });\n      self.end((err, res) => {\n        if (err) reject(err);else resolve(res);\n      });\n    });\n  }\n\n  return this._fullfilledPromise.then(resolve, reject);\n};\n\nRequestBase.prototype.catch = function (cb) {\n  return this.then(undefined, cb);\n};\n/**\n * Allow for extension\n */\n\n\nRequestBase.prototype.use = function (fn) {\n  fn(this);\n  return this;\n};\n\nRequestBase.prototype.ok = function (cb) {\n  if (typeof cb !== 'function') throw new Error('Callback required');\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function (res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\n\nRequestBase.prototype.get = function (field) {\n  return this._header[field.toLowerCase()];\n};\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function (field, val) {\n  if (isObject(field)) {\n    for (const key in field) {\n      if (Object.prototype.hasOwnProperty.call(field, key)) this.set(key, field[key]);\n    }\n\n    return this;\n  }\n\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n}; // eslint-disable-next-line valid-jsdoc\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field field name\n */\n\n\nRequestBase.prototype.unset = function (field) {\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name name of field\n * @param {String|Blob|File|Buffer|fs.ReadStream} val value of field\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.field = function (name, val) {\n  // name should be either a string or an object.\n  if (name === null || undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    throw new Error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (const key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key)) this.field(key, name[key]);\n    }\n\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (const i in val) {\n      if (Object.prototype.hasOwnProperty.call(val, i)) this.field(name, val[i]);\n    }\n\n    return this;\n  } // val should be defined now\n\n\n  if (val === null || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n\n  if (typeof val === 'boolean') {\n    val = String(val);\n  }\n\n  this._getFormData().append(name, val);\n\n  return this;\n};\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request} request\n * @api public\n */\n\n\nRequestBase.prototype.abort = function () {\n  if (this._aborted) {\n    return this;\n  }\n\n  this._aborted = true;\n  if (this.xhr) this.xhr.abort(); // browser\n\n  if (this.req) this.req.abort(); // node\n\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\nRequestBase.prototype._auth = function (user, pass, options, base64Encoder) {\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', `Basic ${base64Encoder(`${user}:${pass}`)}`);\n      break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n      break;\n\n    case 'bearer':\n      // usage would be .auth(accessToken, { type: 'bearer' })\n      this.set('Authorization', `Bearer ${user}`);\n      break;\n\n    default:\n      break;\n  }\n\n  return this;\n};\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\n\nRequestBase.prototype.withCredentials = function (on) {\n  // This is browser-only functionality. Node side is no-op.\n  if (on === undefined) on = true;\n  this._withCredentials = on;\n  return this;\n};\n/**\n * Set the max redirects to `n`. Does nothing in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.redirects = function (n) {\n  this._maxRedirects = n;\n  return this;\n};\n/**\n * Maximum size of buffered response body, in bytes. Counts uncompressed size.\n * Default 200MB.\n *\n * @param {Number} n number of bytes\n * @return {Request} for chaining\n */\n\n\nRequestBase.prototype.maxResponseSize = function (n) {\n  if (typeof n !== 'number') {\n    throw new TypeError('Invalid argument');\n  }\n\n  this._maxResponseSize = n;\n  return this;\n};\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\n\nRequestBase.prototype.toJSON = function () {\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n// eslint-disable-next-line complexity\n\n\nRequestBase.prototype.send = function (data) {\n  const isObj = isObject(data);\n  let type = this._header['content-type'];\n\n  if (this._formData) {\n    throw new Error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw new Error(\"Can't merge these send calls\");\n  } // merge\n\n\n  if (isObj && isObject(this._data)) {\n    for (const key in data) {\n      if (Object.prototype.hasOwnProperty.call(data, key)) this._data[key] = data[key];\n    }\n  } else if (typeof data === 'string') {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n\n    if (type === 'application/x-www-form-urlencoded') {\n      this._data = this._data ? `${this._data}&${data}` : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  } // default to json\n\n\n  if (!type) this.type('json');\n  return this;\n};\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\n\nRequestBase.prototype.sortQuery = function (sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\n\nRequestBase.prototype._finalizeQueryString = function () {\n  const query = this._query.join('&');\n\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  this._query.length = 0; // Makes the call idempotent\n\n  if (this._sort) {\n    const index = this.url.indexOf('?');\n\n    if (index >= 0) {\n      const queryArr = this.url.substring(index + 1).split('&');\n\n      if (typeof this._sort === 'function') {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n}; // For backwards compat only\n\n\nRequestBase.prototype._appendQueryString = () => {\n  console.warn('Unsupported');\n};\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\n\nRequestBase.prototype._timeoutError = function (reason, timeout, errno) {\n  if (this._aborted) {\n    return;\n  }\n\n  const err = new Error(`${reason + timeout}ms exceeded`);\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  err.errno = errno;\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function () {\n  const self = this; // deadline\n\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(() => {\n      self._timeoutError('Timeout of ', self._timeout, 'ETIME');\n    }, this._timeout);\n  } // response timeout\n\n\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(() => {\n      self._timeoutError('Response timeout of ', self._responseTimeout, 'ETIMEDOUT');\n    }, this._responseTimeout);\n  }\n};","\"use strict\";\n\n/**\n * Module dependencies.\n */\nconst utils = require('./utils');\n/**\n * Expose `ResponseBase`.\n */\n\n\nmodule.exports = ResponseBase;\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\n\nfunction mixin(obj) {\n  for (const key in ResponseBase.prototype) {\n    if (Object.prototype.hasOwnProperty.call(ResponseBase.prototype, key)) obj[key] = ResponseBase.prototype[key];\n  }\n\n  return obj;\n}\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\n\nResponseBase.prototype.get = function (field) {\n  return this.header[field.toLowerCase()];\n};\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\n\nResponseBase.prototype._setHeaderProperties = function (header) {\n  // TODO: moar!\n  // TODO: make this a util\n  // content-type\n  const ct = header['content-type'] || '';\n  this.type = utils.type(ct); // params\n\n  const params = utils.params(ct);\n\n  for (const key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key)) this[key] = params[key];\n  }\n\n  this.links = {}; // links\n\n  try {\n    if (header.link) {\n      this.links = utils.parseLinks(header.link);\n    }\n  } catch (err) {// ignore\n  }\n};\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\n\nResponseBase.prototype._setStatusProperties = function (status) {\n  const type = status / 100 | 0; // status / class\n\n  this.statusCode = status;\n  this.status = this.statusCode;\n  this.statusType = type; // basics\n\n  this.info = type === 1;\n  this.ok = type === 2;\n  this.redirect = type === 3;\n  this.clientError = type === 4;\n  this.serverError = type === 5;\n  this.error = type === 4 || type === 5 ? this.toError() : false; // sugar\n\n  this.created = status === 201;\n  this.accepted = status === 202;\n  this.noContent = status === 204;\n  this.badRequest = status === 400;\n  this.unauthorized = status === 401;\n  this.notAcceptable = status === 406;\n  this.forbidden = status === 403;\n  this.notFound = status === 404;\n  this.unprocessableEntity = status === 422;\n};","\"use strict\";\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\nexports.type = str => str.split(/ *; */).shift();\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.params = str => str.split(/ *; */).reduce((obj, str) => {\n  const parts = str.split(/ *= */);\n  const key = parts.shift();\n  const val = parts.shift();\n  if (key && val) obj[key] = val;\n  return obj;\n}, {});\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\n\nexports.parseLinks = str => str.split(/ *, */).reduce((obj, str) => {\n  const parts = str.split(/ *; */);\n  const url = parts[0].slice(1, -1);\n  const rel = parts[1].split(/ *= */)[1].slice(1, -1);\n  obj[rel] = url;\n  return obj;\n}, {});\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\n\nexports.cleanHeader = (header, changesOrigin) => {\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header.host; // secuirty\n\n  if (changesOrigin) {\n    delete header.authorization;\n    delete header.cookie;\n  }\n\n  return header;\n};","\"use strict\";\n\nfunction Agent() {\n  this._defaults = [];\n}\n\n['use', 'on', 'once', 'set', 'query', 'type', 'accept', 'auth', 'withCredentials', 'sortQuery', 'retry', 'ok', 'redirects', 'timeout', 'buffer', 'serialize', 'parse', 'ca', 'key', 'pfx', 'cert'].forEach(fn => {\n  // Default setting for all requests from this agent\n  Agent.prototype[fn] = function (...args) {\n    this._defaults.push({\n      fn,\n      args\n    });\n\n    return this;\n  };\n});\n\nAgent.prototype._setDefaults = function (req) {\n  this._defaults.forEach(def => {\n    req[def.fn](...def.args);\n  });\n};\n\nmodule.exports = Agent;","//      \n\nimport superagent from 'superagent';\n\nexport default (async () => {\n  try {\n    await superagent.get('http://127.0.0.1:61340/api/1.0/stream');\n    return true;\n  } catch (error) {\n    return false;\n  }\n})();\n","var Flatted = (function (Primitive, primitive) {\n\n  /*!\n   * ISC License\n   *\n   * Copyright (c) 2018, Andrea Giammarchi, @WebReflection\n   *\n   * Permission to use, copy, modify, and/or distribute this software for any\n   * purpose with or without fee is hereby granted, provided that the above\n   * copyright notice and this permission notice appear in all copies.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n   * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n   * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n   * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n   * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n   * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n   * PERFORMANCE OF THIS SOFTWARE.\n   */\n\n  var Flatted = {\n\n    parse: function parse(text, reviver) {\n      var input = JSON.parse(text, Primitives).map(primitives);\n      var value = input[0];\n      var $ = reviver || noop;\n      var tmp = typeof value === 'object' && value ?\n                  revive(input, new Set, value, $) :\n                  value;\n      return $.call({'': tmp}, '', tmp);\n    },\n\n    stringify: function stringify(value, replacer, space) {\n      for (var\n        firstRun,\n        known = new Map,\n        input = [],\n        output = [],\n        $ = replacer && typeof replacer === typeof input ?\n              function (k, v) {\n                if (k === '' || -1 < replacer.indexOf(k)) return v;\n              } :\n              (replacer || noop),\n        i = +set(known, input, $.call({'': value}, '', value)),\n        replace = function (key, value) {\n          if (firstRun) {\n            firstRun = !firstRun;\n            return value;\n            // this was invoking twice each root object\n            // return i < 1 ? value : $.call(this, key, value);\n          }\n          var after = $.call(this, key, value);\n          switch (typeof after) {\n            case 'object':\n              if (after === null) return after;\n            case primitive:\n              return known.get(after) || set(known, input, after);\n          }\n          return after;\n        };\n        i < input.length; i++\n      ) {\n        firstRun = true;\n        output[i] = JSON.stringify(input[i], replace, space);\n      }\n      return '[' + output.join(',') + ']';\n    }\n\n  };\n\n  return Flatted;\n\n  function noop(key, value) {\n    return value;\n  }\n\n  function revive(input, parsed, output, $) {\n    return Object.keys(output).reduce(\n      function (output, key) {\n        var value = output[key];\n        if (value instanceof Primitive) {\n          var tmp = input[value];\n          if (typeof tmp === 'object' && !parsed.has(tmp)) {\n            parsed.add(tmp);\n            output[key] = $.call(output, key, revive(input, parsed, tmp, $));\n          } else {\n            output[key] = $.call(output, key, tmp);\n          }\n        } else\n          output[key] = $.call(output, key, value);\n        return output;\n      },\n      output\n    );\n  }\n\n  function set(known, input, value) {\n    var index = Primitive(input.push(value) - 1);\n    known.set(value, index);\n    return index;\n  }\n\n  // the two kinds of primitives\n  //  1. the real one\n  //  2. the wrapped one\n\n  function primitives(value) {\n    return value instanceof Primitive ? Primitive(value) : value;\n  }\n\n  function Primitives(key, value) {\n    return typeof value === primitive ? new Primitive(value) : value;\n  }\n\n}(String, 'string'));\nexport default Flatted;\nexport const parse = Flatted.parse;\nexport const stringify = Flatted.stringify;\n","//      \n\n/* eslint-disable no-console */\n\nimport superagent from 'superagent';\nimport { stringify } from 'flatted';\nimport blendServerDetectedPromise from './server-detection';\n\nlet blendServerDetected = false;\n\nblendServerDetectedPromise.then((exists) => {\n  blendServerDetected = exists;\n});\n\nconst log = (name       , level       , value    , description         ) => {\n  let color = 'gray';\n  switch (level) {\n    case 'debug':\n      color = 'blue';\n      break;\n    case 'info':\n      color = 'green';\n      break;\n    case 'warn':\n      color = 'orange';\n      break;\n    case 'error':\n      color = 'red';\n      break;\n    default:\n      throw new Error(`Unknown level ${level}`);\n  }\n  if (typeof value === 'string') {\n    console.log(`%c${name}: %c${value}`, `color:${color}; font-weight: bold`, `color:${color}`);\n    if (blendServerDetected) {\n      superagent.post('http://127.0.0.1:61340/api/1.0/log').set('Content-Type', 'application/json').send({ name, level, value, description }).end((error) => {\n        if (error) {\n          console.error('Unable to post to logging API');\n          console.error(error);\n        }\n      });\n    }\n  } else {\n    const sanitizedValue = JSON.parse(stringify(value));\n    JSON.stringify(sanitizedValue, null, 2).split('\\n').forEach((line) => {\n      console.log(`%c${name}: %c${line}`, `color:${color}; font-weight: bold`, `color:${color}`);\n    });\n    if (blendServerDetected) {\n      superagent.post('http://127.0.0.1:61340/api/1.0/log').set('Content-Type', 'application/json').send({ name, level, value: sanitizedValue, description }).end((error) => {\n        if (error) {\n          console.error('Unable to post to logging API');\n          console.error(error);\n        }\n      });\n    }\n  }\n  if (typeof description === 'string') {\n    console.log(`%c\\t${description}`, 'color:gray');\n  }\n};\n\nexport default (name        ) => ({\n  debug: (value    , description         ) => {\n    log(name, 'debug', value, description);\n  },\n  info: (value    , description         ) => {\n    log(name, 'info', value, description);\n  },\n  warn: (value    , description         ) => {\n    log(name, 'warn', value, description);\n  },\n  error: (value    , description         ) => {\n    log(name, 'error', value, description);\n  },\n});\n","//      \n\nimport EventEmitter from 'events';\nimport WebSocket from 'isomorphic-ws';\nimport CaptionParser from 'mux.js/lib/mp4/caption-parser';\nimport mp4Probe from 'mux.js/lib/mp4/probe';\nimport { parseBuffer } from 'codem-isoboxer';\nimport LruCache from 'lru-cache';\nimport blendServerDetectedPromise from './server-detection';\nimport makeBlendLogger from './logger';\n\nconst Cue = window.VTTCue || window.TextTrackCue;\n\nconst isFirefox = navigator.userAgent.match(/Firefox\\//);\n\nconst mergeUint8Arrays = (arrays) => {\n  let length = 0;\n  arrays.forEach((item) => {\n    length += item.length;\n  });\n  const merged = new Uint8Array(length);\n  let offset = 0;\n  arrays.forEach((item) => {\n    merged.set(item, offset);\n    offset += item.length;\n  });\n  return merged;\n};\n\n/**\n * Class representing a Blend Client\n */\nexport default class BlendClient extends EventEmitter {\n  constructor(element                  , streamUrl       ) {\n    super();\n    this.element = element;\n    this.textTracks = new Map();\n    this.textCache = new LruCache({ max: 500 });\n    this.streamUrl = streamUrl;\n    this.videoQueue = [];\n    this.resetInProgress = false;\n    this.reconnectAttempt = 0;\n    this.reconnectAttemptResetTimeout = null;\n    const clientLogger = makeBlendLogger(`${streamUrl} Client`);\n    this.videoLogger = makeBlendLogger(`${streamUrl} Video Element`);\n    this.mediaSourceLogger = makeBlendLogger(`${streamUrl} Media Source`);\n    this.videoBufferLogger = makeBlendLogger(`${streamUrl} Video Source Buffer`);\n    this.webSocketLogger = makeBlendLogger(`${streamUrl} WebSocket`);\n    this.setupElementLogging(element);\n    this.ready = this.openWebSocket(streamUrl);\n    this.ready.catch((error) => {\n      this.webSocketLogger.error(error.message);\n    });\n    this.setupMediaSource(element);\n    element.addEventListener('error', (event      ) => {\n      if (event.type !== 'error') {\n        return;\n      }\n      const mediaError = element.error;\n      if (mediaError && mediaError.code === mediaError.MEDIA_ERR_DECODE) {\n        // this.emit('error', mediaError);\n        this.reset();\n      }\n    });\n    let nextBufferedSegmentInterval;\n    const skipToNextBufferedSegment = () => {\n      const videoBuffer = this.videoBuffer;\n      if (!videoBuffer) {\n        return;\n      }\n      for (let i = 0; i < videoBuffer.buffered.length; i += 1) {\n        const segmentStart = videoBuffer.buffered.start(i);\n        if (segmentStart > element.currentTime) {\n          this.videoLogger.warn(`Skipping ${segmentStart - element.currentTime} ms`);\n          element.currentTime = segmentStart; // eslint-disable-line no-param-reassign\n          return;\n        }\n      }\n    };\n    const addEnsureRecoveryOnWaiting = () => {\n      element.addEventListener('waiting', () => {\n        ensureRecovery();\n        if (!this.videoBuffer) {\n          return;\n        }\n        clearInterval(nextBufferedSegmentInterval);\n        nextBufferedSegmentInterval = setInterval(() => {\n          skipToNextBufferedSegment();\n        }, 100);\n        skipToNextBufferedSegment();\n      });\n      element.removeEventListener('canplay', addEnsureRecoveryOnWaiting);\n      element.removeEventListener('playing', addEnsureRecoveryOnWaiting);\n      element.removeEventListener('play', addEnsureRecoveryOnWaiting);\n    };\n    element.addEventListener('canplay', addEnsureRecoveryOnWaiting);\n    element.addEventListener('playing', addEnsureRecoveryOnWaiting);\n    element.addEventListener('play', addEnsureRecoveryOnWaiting);\n    element.addEventListener('canplay', () => {\n      clearInterval(nextBufferedSegmentInterval);\n      element.play();\n    });\n    const elementIsPlaying = () => {\n      if (!element) {\n        return false;\n      }\n      return !!(element.currentTime > 0 && !element.paused && !element.ended && element.readyState > 2);\n    };\n    this.recoveryTimeout = null;\n    const ensureRecovery = () => {\n      if (this.reconnectAttemptResetTimeout) {\n        clearTimeout(this.reconnectAttemptResetTimeout);\n      }\n      if (elementIsPlaying()) {\n        clientLogger.info('Element is playing, skipping recovery detection');\n        return;\n      }\n      if (this.recoveryTimeout || this.resetInProgress) {\n        clientLogger.info('Recovery detection already in progress, skipping');\n        return;\n      }\n      clientLogger.info('Ensuring recovery after error detected');\n      const recoveryStart = Date.now();\n      const handlePlay = () => {\n        clientLogger.info(`Recovered after ${Math.round((Date.now() - recoveryStart) / 100) / 10} seconds`);\n        if (this.recoveryTimeout) {\n          clearTimeout(this.recoveryTimeout);\n        }\n        this.recoveryTimeout = null;\n        element.removeEventListener('play', handlePlay);\n        element.removeEventListener('playing', handlePlay);\n        this.reconnectAttemptResetTimeout = setTimeout(() => {\n          this.reconnectAttempt = 0;\n        }, 15000);\n      };\n      clientLogger.info(`Reconnect attempt: ${this.reconnectAttempt}`);\n      if (this.reconnectAttempt > 3) {\n        clientLogger.info(`Attempting to play fallback stream after ${this.reconnectAttempt} attempts`);\n        // Emit message to handle fallback url\n        this.emit('handleFallbackStream', { });\n        this.reconnectAttempt = 0;\n      }\n      this.recoveryTimeout = setTimeout(() => {\n        if (elementIsPlaying()) {\n          clientLogger.info('Detected playing element after recovery timeout');\n          handlePlay();\n          return;\n        }\n        this.recoveryTimeout = null;\n        clientLogger.error('Timeout after attempted recovery');\n        this.reset();\n        element.removeEventListener('play', handlePlay);\n        element.removeEventListener('playing', handlePlay);\n      }, 10000);\n      element.addEventListener('play', handlePlay);\n      element.addEventListener('playing', handlePlay);\n    };\n  }\n\n  async close() {\n    delete this.textTracks;\n    if (this.recoveryTimeout) {\n      clearTimeout(this.recoveryTimeout);\n    }\n    this.element.removeAttribute('src');\n    this.element.load();\n    try {\n      await this.closeWebSocket();\n    } catch (error) {\n      console.log(`Error closing websocket: ${error.message}`); // eslint-disable-line no-console\n    }\n    delete this.videoBuffer;\n    this.videoQueue = [];\n  }\n\n  async reset() {\n    if (this.resetInProgress) {\n      return;\n    }\n    this.resetInProgress = true;\n    await this.close();\n    this.resetInProgress = false;\n    this.reconnectAttempt += 1;\n    this.openWebSocket(this.streamUrl);\n    this.setupMediaSource(this.element);\n  }\n\n  /**\n   * Connects to a server.\n   * @param {string} address Stream URL\n   * @return {Promise<void>}\n   */\n  async openWebSocket(streamUrl       ) {\n    const address = `ws://127.0.0.1:61340/api/1.0/stream/${encodeURIComponent(streamUrl)}/`;\n\n    const blendServerDetected = await blendServerDetectedPromise;\n\n    if (!blendServerDetected) {\n      this.webSocketLogger.error(`Unable to open web socket connection to ${address}, Blend Server not detected`);\n      return;\n    }\n\n    const ws = new WebSocket(address);\n\n    let heartbeatInterval;\n    const captionParser = new CaptionParser();\n\n    captionParser.init();\n\n    ws.binaryType = 'arraybuffer';\n\n    ws.onclose = (event) => {\n      clearInterval(heartbeatInterval);\n      const { wasClean, reason, code } = event;\n      this.webSocketLogger.info(`${wasClean ? 'Cleanly' : 'Uncleanly'} closed websocket connection to ${address} with code ${code}${reason ? `: ${reason}` : ''}`);\n      delete this.ws;\n      this.emit('close', code, reason);\n    };\n    let trackIds;\n    let timescales;\n    let buffered = new Uint8Array([]);\n    ws.onmessage = (event) => {\n      const typedArray = new Uint8Array(event.data);\n      const merged = new Uint8Array(buffered.byteLength + typedArray.byteLength);\n      merged.set(buffered, 0);\n      merged.set(typedArray, buffered.byteLength);\n      buffered = merged;\n      if (!trackIds || !timescales) {\n        const checkedTimescales = mp4Probe.timescale(buffered);\n        if (Object.keys(checkedTimescales).length === 0) {\n          return;\n        }\n        timescales = checkedTimescales;\n        trackIds = mp4Probe.videoTrackIds(buffered);\n      }\n      const parsed = parseBuffer(buffered.buffer);\n      if (parsed._incomplete) { // eslint-disable-line no-underscore-dangle\n        return;\n      }\n\n      const parsedCaptions = captionParser.parse(buffered, trackIds, timescales);\n      if (parsedCaptions) {\n        const { captions } = parsedCaptions;\n        for (const caption of captions) {\n          this.addCaption(caption);\n        }\n      }\n\n      const videoBuffer = this.videoBuffer;\n      const videoQueue = this.videoQueue;\n      if (videoBuffer) {\n        if (videoQueue.length > 0 || videoBuffer.updating) {\n          videoQueue.push(buffered);\n        } else {\n          try {\n            videoBuffer.appendBuffer(buffered);\n          } catch (error) {\n            this.videoBufferLogger.error(`${error.message}, code: ${error.code}`);\n          }\n        }\n      } else {\n        videoQueue.push(buffered);\n      }\n      buffered = new Uint8Array([]);\n    };\n\n    await new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        const error = new Error('Unable to open websocket, timeout after 10 seconds');\n        this.emit('error', error);\n        ws.onerror = () => {};\n        ws.onopen = () => {};\n        reject(error);\n      }, 10000);\n\n      ws.onerror = (event) => {\n        clearTimeout(timeout);\n        this.webSocketLogger.error(`Unable to open socket to ${streamUrl}`);\n        this.emit('error', event);\n        reject(new Error('Unable to open'));\n      };\n\n      ws.onopen = () => {\n        clearTimeout(timeout);\n        this.emit('open');\n        this.ws = ws;\n        heartbeatInterval = setInterval(() => {\n          if (ws.readyState === 1) {\n            ws.send(new Uint8Array([]));\n          }\n        }, 5000);\n        ws.onerror = (event) => {\n          this.webSocketLogger.error(event);\n          this.emit('error', event);\n        };\n        resolve();\n      };\n    });\n  }\n\n  addCaption({ stream, startTime, endTime, text }                                                                  ) {\n    const cacheKey = `${startTime}:${endTime}:${text}`;\n    if (this.textCache.has(cacheKey)) {\n      return;\n    }\n    this.textCache.set(cacheKey, true);\n    let textTrack = this.textTracks.get(stream);\n    if (!textTrack) {\n      textTrack = this.element.addTextTrack('captions', 'English', 'en');\n      this.textTracks.set(stream, textTrack);\n    }\n    const cue = new Cue(startTime, endTime, text);\n    cue.line = 1;\n    cue.align = 'left';\n    cue.position = isFirefox ? 55 : 5;\n    textTrack.addCue(cue);\n  }\n\n  /**\n   * Close connection to server.\n   * @param {number} [code] Websocket close reason code to send to the server\n   * @param {string} [reason] Websocket close reason to send to the server\n   * @return {Promise<void>}\n   */\n  async closeWebSocket(code         , reason         ) {\n    const ws = this.ws;\n    if (!ws) {\n      return;\n    }\n    ws.onmessage = () => {};\n    await new Promise((resolve, reject) => {\n      const timeout = setTimeout(() => {\n        this.removeListener('error', onError);\n        this.removeListener('close', onClose);\n        reject(new Error('Unable to close websocket, timeout after 5 seconds'));\n      }, 5000);\n      const onClose = () => {\n        clearTimeout(timeout);\n        this.removeListener('error', onError);\n        resolve();\n      };\n      const onError = (event       ) => {\n        clearTimeout(timeout);\n        this.removeListener('close', onClose);\n        reject(event);\n      };\n      this.once('error', onError);\n      this.once('close', onClose);\n      ws.close(code, reason);\n    });\n  }\n\n  async setupMediaSource(element                  ) {\n    const mediaSource = new MediaSource();\n    this.setupMediaSourceLogging(mediaSource);\n    element.src = URL.createObjectURL(mediaSource); // eslint-disable-line no-param-reassign\n    await new Promise((resolve) => {\n      const handle = () => {\n        mediaSource.removeEventListener('sourceopen', handle);\n        resolve();\n      };\n      mediaSource.addEventListener('sourceopen', handle);\n    });\n    const videoBuffer = mediaSource.addSourceBuffer('video/mp4; codecs=\"avc1.64001f, mp4a.40.2\"');\n    this.videoBuffer = videoBuffer;\n    this.setupVideoBufferLogging(videoBuffer);\n    videoBuffer.addEventListener('updateend', async () => {\n      if (this.videoQueue.length > 0 && !videoBuffer.updating) {\n        try {\n          videoBuffer.appendBuffer(this.videoQueue.shift());\n        } catch (error) {\n          this.videoBufferLogger.error(`${error.message}, code: ${error.code}`);\n        }\n      }\n    });\n    if (this.videoQueue.length > 0 && !videoBuffer.updating) {\n      try {\n        const data = mergeUint8Arrays(this.videoQueue);\n        this.videoQueue = [];\n        videoBuffer.appendBuffer(data);\n      } catch (error) {\n        this.videoBufferLogger.error(`${error.message}, code: ${error.code}`);\n      }\n    }\n  }\n\n  setupMediaSourceLogging(mediaSource             ) {\n    const mediaSourceLogger = this.mediaSourceLogger;\n    mediaSource.addEventListener('sourceopen', () => {\n      mediaSourceLogger.info('sourceopen');\n    });\n    mediaSource.addEventListener('sourceended', () => {\n      mediaSourceLogger.info('sourceended');\n    });\n    mediaSource.addEventListener('sourceclose', () => {\n      mediaSourceLogger.info('sourceclose');\n    });\n    mediaSource.addEventListener('updatestart', () => {\n      mediaSourceLogger.info('updatestart');\n    });\n    mediaSource.addEventListener('update', () => {\n      mediaSourceLogger.info('update');\n    });\n    mediaSource.addEventListener('updateend', () => {\n      mediaSourceLogger.info('updateend');\n    });\n    mediaSource.addEventListener('error', () => {\n      mediaSourceLogger.info('error');\n    });\n    mediaSource.addEventListener('abort', () => {\n      mediaSourceLogger.info('abort');\n    });\n    mediaSource.addEventListener('addsourcevideoBuffer', () => {\n      mediaSourceLogger.info('addsourcevideoBuffer');\n    });\n    mediaSource.addEventListener('removesourcevideoBuffer', () => {\n      mediaSourceLogger.info('removesourcevideoBuffer');\n    });\n  }\n\n  setupVideoBufferLogging(videoBuffer              ) {\n    const videoBufferLogger = this.videoBufferLogger;\n    videoBuffer.addEventListener('sourceopen', () => {\n      videoBufferLogger.info('sourceopen');\n    });\n    videoBuffer.addEventListener('sourceended', () => {\n      videoBufferLogger.info('sourceended');\n    });\n    videoBuffer.addEventListener('sourceclose', () => {\n      videoBufferLogger.info('sourceclose');\n    });\n    videoBuffer.addEventListener('error', () => {\n      videoBufferLogger.info('error');\n    });\n    videoBuffer.addEventListener('abort', () => {\n      videoBufferLogger.info('abort');\n    });\n    videoBuffer.addEventListener('addsourcevideoBuffer', () => {\n      videoBufferLogger.info('addsourcevideoBuffer');\n    });\n    videoBuffer.addEventListener('removesourcevideoBuffer', () => {\n      videoBufferLogger.info('removesourcevideoBuffer');\n    });\n  }\n\n  setupElementLogging(element                  ) {\n    const videoLogger = this.videoLogger;\n    element.addEventListener('resize', () => {\n      videoLogger.info('abort', 'Sent when playback is aborted; for example, if the media is playing and is restarted from the beginning, this event is sent');\n    });\n    element.addEventListener('canplay', () => {\n      videoLogger.info('canplay', 'Sent when enough data is available that the media can be played, at least for a couple of frames.  This corresponds to the HAVE_ENOUGH_DATA readyState');\n    });\n    element.addEventListener('canplaythrough', () => {\n      videoLogger.info('canplaythrough', 'Sent when the ready state changes to CAN_PLAY_THROUGH, indicating that the entire media can be played without interruption, assuming the download rate remains at least at the current level. It will also be fired when playback is toggled between paused and playing. Note: Manually setting the currentTime will eventually fire a canplaythrough event in firefox. Other browsers might not fire this event');\n    });\n    element.addEventListener('durationchange', () => {\n      videoLogger.info('durationchange', 'The metadata has loaded or changed, indicating a change in duration of the media.  This is sent, for example, when the media has loaded enough that the duration is known');\n    });\n    element.addEventListener('emptied', () => {\n      videoLogger.info('emptied', 'The media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it');\n    });\n    element.addEventListener('encrypted', () => {\n      videoLogger.info('encrypted', ' The user agent has encountered initialization data in the media data');\n    });\n    element.addEventListener('ended', () => {\n      videoLogger.info('ended', 'Sent when playback completes');\n    });\n    element.addEventListener('error', (event              ) => {\n      const mediaError = element.error;\n      const message = mediaError && mediaError.message ? mediaError.message : null;\n      if (mediaError && message) {\n        videoLogger.error(`${mediaError.code}: ${message}`);\n      } else {\n        videoLogger.error('error', 'Sent when an error occurs.  The element\\'s error attribute contains more information. See HTMLMediaElement.error for details');\n        if (event) {\n          videoLogger.error(event);\n        }\n      }\n    });\n    element.addEventListener('interruptbegin', () => {\n      videoLogger.info('interruptbegin', 'Sent when audio playing on a Firefox OS device is interrupted, either because the app playing the audio is sent to the background, or audio in a higher priority audio channel begins to play. See Using the AudioChannels API for more details');\n    });\n    element.addEventListener('interruptend', () => {\n      videoLogger.info('interruptend', 'Sent when previously interrupted audio on a Firefox OS device commences playing again — when the interruption ends. This is when the associated app comes back to the foreground, or when the higher priority audio finished playing. See Using the AudioChannels API for more details');\n    });\n    element.addEventListener('loadeddata', () => {\n      videoLogger.info('loadeddata', 'The first frame of the media has finished loading');\n    });\n    element.addEventListener('loadedmetadata', () => {\n      videoLogger.info('loadedmetadata', 'The media\\'s metadata has finished loading; all attributes now contain as much useful information as they\\'re going to');\n    });\n    element.addEventListener('loadstart', () => {\n      videoLogger.info('loadstart', 'Sent when loading of the media begins');\n    });\n    element.addEventListener('mozaudioavailable', () => {\n      videoLogger.info('mozaudioavailable', 'Sent when an audio videoBuffer is provided to the audio layer for processing; the videoBuffer contains raw audio samples that may or may not already have been played by the time you receive the event');\n    });\n    element.addEventListener('pause', () => {\n      videoLogger.info('pause', 'Sent when the playback state is changed to paused (paused property is true)');\n    });\n    element.addEventListener('play', () => {\n      videoLogger.info('play', 'Sent when the playback state is no longer paused, as a result of the play method, or the autoplay attribute');\n    });\n    element.addEventListener('playing', () => {\n      videoLogger.info('playing', 'Sent when the media has enough data to start playing, after the play event, but also when recovering from being stalled, when looping media restarts, and after seeked, if it was playing before seeking');\n    });\n    element.addEventListener('ratechange', () => {\n      videoLogger.info('ratechange', 'Sent when the playback speed changes');\n    });\n    element.addEventListener('seeked', () => {\n      videoLogger.info('seeked', 'Sent when a seek operation completes');\n    });\n    element.addEventListener('seeking', () => {\n      videoLogger.info('seeking', 'Sent when a seek operation begins');\n    });\n    element.addEventListener('stalled', () => {\n      videoLogger.info('stalled', 'Sent when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming');\n    });\n    element.addEventListener('suspend', () => {\n      videoLogger.info('suspend', 'Sent when loading of the media is suspended; this may happen either because the download has completed or because it has been paused for any other reason');\n    });\n    element.addEventListener('volumechange', () => {\n      videoLogger.info('volumechange', 'Sent when the audio volume changes (both when the volume is set and when the muted attribute is changed)');\n    });\n    element.addEventListener('waiting', () => {\n      videoLogger.info('waiting', 'Sent when the requested operation (such as playback) is delayed pending the completion of another operation (such as a seek)');\n    });\n  }\n\n            \n                            \n                           \n                           \n                                                 \n                            \n                   \n                \n                       \n                      \n                            \n                            \n                          \n                               \n                       \n                                     \n                                       \n                                    \n}\n\n","//      \n\nimport blendServerDetectedPromise from './server-detection';\n\nexport default async (streamUrl       ) => {\n  const blendServerDetected = await blendServerDetectedPromise;\n  if (!blendServerDetected) {\n    throw new Error('Unable to generate thumbnail, Blend Server not detected');\n  }\n  return `http://127.0.0.1:61340/api/1.0/stream/${encodeURIComponent(streamUrl)}/thumbnail.jpg`;\n};\n","// @flow\n\n/* eslint-disable no-unused-vars */\n\nimport { BlendClient, blendServerDetectedPromise, makeBlendLogger, getBlendThumbnailUrl } from '@bunchtogether/blend2-client';\n\nconst windowLogger = makeBlendLogger('Window');\n\nwindow.addEventListener('unhandledrejection', (event:Event) => {\n  if (event && event.error) {\n    if (event.error.stack) {\n      windowLogger.error(event.error.stack);\n    } else if (event.error.message) {\n      windowLogger.error(event.error.message);\n    } else {\n      windowLogger.error('Unhandled rejection');\n    }\n  } else {\n    windowLogger.error('Unhandled rejection');\n  }\n});\n\nwindow.addEventListener('error', (event:Event) => {\n  if (event && event.error) {\n    if (event.error.stack) {\n      windowLogger.error(event.error.stack);\n    } else if (event.error.message) {\n      windowLogger.error(event.error.message);\n    } else {\n      windowLogger.error('Uncaught error');\n    }\n  } else {\n    windowLogger.error('Uncaught error');\n  }\n});\n\nconst urlRegex = /\\/api\\/1\\.0\\/stream\\/([^/]+)\\//;\n\nasync function initialize() {\n  const urlMatch = window.location.href.match(urlRegex);\n  if (!urlMatch || !urlMatch[1]) {\n    throw new Error(`Invalid address ${window.location.href}`);\n  }\n  const streamUrl = decodeURIComponent(urlMatch[1]);\n\n  const blendServerDetected = await blendServerDetectedPromise;\n\n  if (blendServerDetected) {\n    windowLogger.info('Blend server detected');\n  } else {\n    windowLogger.error(`Unable to open web socket connection for ${streamUrl}, Blend Server not detected`);\n    return;\n  }\n\n  const thumbnailUrl = await getBlendThumbnailUrl(streamUrl);\n\n  windowLogger.info(`Thumbnail: ${thumbnailUrl}`);\n\n  const element = document.querySelector('video');\n  if (!element) {\n    throw new Error('Video element does not exist');\n  }\n  const client = new BlendClient(element, streamUrl);\n}\n\ninitialize();\n\n"],"sourceRoot":""}